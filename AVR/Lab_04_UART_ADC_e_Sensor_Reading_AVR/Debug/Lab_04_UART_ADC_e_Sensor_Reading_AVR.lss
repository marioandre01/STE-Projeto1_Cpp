
Lab_04_UART_ADC_e_Sensor_Reading_AVR.elf: formato do arquivo elf32-avr

Seções:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800200  000012e2  00001376  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080023c  0080023c  000013b2  2**0
                  ALLOC
  3 .stab         00000cb4  00000000  00000000  000013b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001238  00000000  00000000  00002068  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000032a0  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000032b4  2**2
                  CONTENTS, READONLY
  7 .debug_info   00000bbc  00000000  00000000  000032f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000b1a  00000000  00000000  00003eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  000049ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e6  00000000  00000000  000049e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Desmontagem da seção .text:

00000000 <__vectors>:
       0:	ee c0       	rjmp	.+476    	; 0x1de <__ctors_end>
       2:	00 00       	nop
       4:	0c c1       	rjmp	.+536    	; 0x21e <__bad_interrupt>
       6:	00 00       	nop
       8:	0a c1       	rjmp	.+532    	; 0x21e <__bad_interrupt>
       a:	00 00       	nop
       c:	08 c1       	rjmp	.+528    	; 0x21e <__bad_interrupt>
       e:	00 00       	nop
      10:	06 c1       	rjmp	.+524    	; 0x21e <__bad_interrupt>
      12:	00 00       	nop
      14:	04 c1       	rjmp	.+520    	; 0x21e <__bad_interrupt>
      16:	00 00       	nop
      18:	02 c1       	rjmp	.+516    	; 0x21e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	00 c1       	rjmp	.+512    	; 0x21e <__bad_interrupt>
      1e:	00 00       	nop
      20:	fe c0       	rjmp	.+508    	; 0x21e <__bad_interrupt>
      22:	00 00       	nop
      24:	fc c0       	rjmp	.+504    	; 0x21e <__bad_interrupt>
      26:	00 00       	nop
      28:	fa c0       	rjmp	.+500    	; 0x21e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	f8 c0       	rjmp	.+496    	; 0x21e <__bad_interrupt>
      2e:	00 00       	nop
      30:	f6 c0       	rjmp	.+492    	; 0x21e <__bad_interrupt>
      32:	00 00       	nop
      34:	f4 c0       	rjmp	.+488    	; 0x21e <__bad_interrupt>
      36:	00 00       	nop
      38:	f2 c0       	rjmp	.+484    	; 0x21e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	f0 c0       	rjmp	.+480    	; 0x21e <__bad_interrupt>
      3e:	00 00       	nop
      40:	ee c0       	rjmp	.+476    	; 0x21e <__bad_interrupt>
      42:	00 00       	nop
      44:	ec c0       	rjmp	.+472    	; 0x21e <__bad_interrupt>
      46:	00 00       	nop
      48:	ea c0       	rjmp	.+468    	; 0x21e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	e8 c0       	rjmp	.+464    	; 0x21e <__bad_interrupt>
      4e:	00 00       	nop
      50:	e6 c0       	rjmp	.+460    	; 0x21e <__bad_interrupt>
      52:	00 00       	nop
      54:	e4 c0       	rjmp	.+456    	; 0x21e <__bad_interrupt>
      56:	00 00       	nop
      58:	e2 c0       	rjmp	.+452    	; 0x21e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	e0 c0       	rjmp	.+448    	; 0x21e <__bad_interrupt>
      5e:	00 00       	nop
      60:	de c0       	rjmp	.+444    	; 0x21e <__bad_interrupt>
      62:	00 00       	nop
      64:	dc c0       	rjmp	.+440    	; 0x21e <__bad_interrupt>
      66:	00 00       	nop
      68:	da c0       	rjmp	.+436    	; 0x21e <__bad_interrupt>
      6a:	00 00       	nop
      6c:	d8 c0       	rjmp	.+432    	; 0x21e <__bad_interrupt>
      6e:	00 00       	nop
      70:	d6 c0       	rjmp	.+428    	; 0x21e <__bad_interrupt>
      72:	00 00       	nop
      74:	d4 c0       	rjmp	.+424    	; 0x21e <__bad_interrupt>
      76:	00 00       	nop
      78:	d2 c0       	rjmp	.+420    	; 0x21e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	d0 c0       	rjmp	.+416    	; 0x21e <__bad_interrupt>
      7e:	00 00       	nop
      80:	ce c0       	rjmp	.+412    	; 0x21e <__bad_interrupt>
      82:	00 00       	nop
      84:	cc c0       	rjmp	.+408    	; 0x21e <__bad_interrupt>
      86:	00 00       	nop
      88:	ca c0       	rjmp	.+404    	; 0x21e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	c8 c0       	rjmp	.+400    	; 0x21e <__bad_interrupt>
      8e:	00 00       	nop
      90:	c6 c0       	rjmp	.+396    	; 0x21e <__bad_interrupt>
      92:	00 00       	nop
      94:	c4 c0       	rjmp	.+392    	; 0x21e <__bad_interrupt>
      96:	00 00       	nop
      98:	c2 c0       	rjmp	.+388    	; 0x21e <__bad_interrupt>
      9a:	00 00       	nop
      9c:	c0 c0       	rjmp	.+384    	; 0x21e <__bad_interrupt>
      9e:	00 00       	nop
      a0:	be c0       	rjmp	.+380    	; 0x21e <__bad_interrupt>
      a2:	00 00       	nop
      a4:	bc c0       	rjmp	.+376    	; 0x21e <__bad_interrupt>
      a6:	00 00       	nop
      a8:	ba c0       	rjmp	.+372    	; 0x21e <__bad_interrupt>
      aa:	00 00       	nop
      ac:	b8 c0       	rjmp	.+368    	; 0x21e <__bad_interrupt>
      ae:	00 00       	nop
      b0:	b6 c0       	rjmp	.+364    	; 0x21e <__bad_interrupt>
      b2:	00 00       	nop
      b4:	b4 c0       	rjmp	.+360    	; 0x21e <__bad_interrupt>
      b6:	00 00       	nop
      b8:	b2 c0       	rjmp	.+356    	; 0x21e <__bad_interrupt>
      ba:	00 00       	nop
      bc:	b0 c0       	rjmp	.+352    	; 0x21e <__bad_interrupt>
      be:	00 00       	nop
      c0:	ae c0       	rjmp	.+348    	; 0x21e <__bad_interrupt>
      c2:	00 00       	nop
      c4:	ac c0       	rjmp	.+344    	; 0x21e <__bad_interrupt>
      c6:	00 00       	nop
      c8:	aa c0       	rjmp	.+340    	; 0x21e <__bad_interrupt>
      ca:	00 00       	nop
      cc:	a8 c0       	rjmp	.+336    	; 0x21e <__bad_interrupt>
      ce:	00 00       	nop
      d0:	a6 c0       	rjmp	.+332    	; 0x21e <__bad_interrupt>
      d2:	00 00       	nop
      d4:	a4 c0       	rjmp	.+328    	; 0x21e <__bad_interrupt>
      d6:	00 00       	nop
      d8:	a2 c0       	rjmp	.+324    	; 0x21e <__bad_interrupt>
      da:	00 00       	nop
      dc:	a0 c0       	rjmp	.+320    	; 0x21e <__bad_interrupt>
      de:	00 00       	nop
      e0:	9e c0       	rjmp	.+316    	; 0x21e <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	00 40       	sbci	r16, 0x00	; 0
      e6:	7a 10       	cpse	r7, r10
      e8:	f3 5a       	subi	r31, 0xA3	; 163
      ea:	00 a0       	ldd	r0, Z+32	; 0x20
      ec:	72 4e       	sbci	r23, 0xE2	; 226
      ee:	18 09       	sbc	r17, r8
      f0:	00 10       	cpse	r0, r0
      f2:	a5 d4       	rcall	.+2378   	; 0xa3e <__divsf3_pse+0xa8>
      f4:	e8 00       	.word	0x00e8	; ????
      f6:	00 e8       	ldi	r16, 0x80	; 128
      f8:	76 48       	sbci	r23, 0x86	; 134
      fa:	17 00       	.word	0x0017	; ????
      fc:	00 e4       	ldi	r16, 0x40	; 64
      fe:	0b 54       	subi	r16, 0x4B	; 75
     100:	02 00       	.word	0x0002	; ????
     102:	00 ca       	rjmp	.-3072   	; 0xfffff504 <__eeprom_end+0xff7ef504>
     104:	9a 3b       	cpi	r25, 0xBA	; 186
     106:	00 00       	nop
     108:	00 e1       	ldi	r16, 0x10	; 16
     10a:	f5 05       	cpc	r31, r5
     10c:	00 00       	nop
     10e:	80 96       	adiw	r24, 0x20	; 32
     110:	98 00       	.word	0x0098	; ????
     112:	00 00       	nop
     114:	40 42       	sbci	r20, 0x20	; 32
     116:	0f 00       	.word	0x000f	; ????
     118:	00 00       	nop
     11a:	a0 86       	std	Z+8, r10	; 0x08
     11c:	01 00       	.word	0x0001	; ????
     11e:	00 00       	nop
     120:	10 27       	eor	r17, r16
     122:	00 00       	nop
     124:	00 00       	nop
     126:	e8 03       	fmulsu	r22, r16
     128:	00 00       	nop
     12a:	00 00       	nop
     12c:	64 00       	.word	0x0064	; ????
     12e:	00 00       	nop
     130:	00 00       	nop
     132:	0a 00       	.word	0x000a	; ????
     134:	00 00       	nop
     136:	00 00       	nop
     138:	01 00       	.word	0x0001	; ????
     13a:	00 00       	nop
     13c:	00 00       	nop
     13e:	2c 76       	andi	r18, 0x6C	; 108
     140:	d8 88       	ldd	r13, Y+16	; 0x10
     142:	dc 67       	ori	r29, 0x7C	; 124
     144:	4f 08       	sbc	r4, r15
     146:	23 df       	rcall	.-442    	; 0xffffff8e <__eeprom_end+0xff7eff8e>
     148:	c1 df       	rcall	.-126    	; 0xcc <__SREG__+0x8d>
     14a:	ae 59       	subi	r26, 0x9E	; 158
     14c:	e1 b1       	in	r30, 0x01	; 1
     14e:	b7 96       	adiw	r30, 0x27	; 39
     150:	e5 e3       	ldi	r30, 0x35	; 53
     152:	e4 53       	subi	r30, 0x34	; 52
     154:	c6 3a       	cpi	r28, 0xA6	; 166
     156:	e6 51       	subi	r30, 0x16	; 22
     158:	99 76       	andi	r25, 0x69	; 105
     15a:	96 e8       	ldi	r25, 0x86	; 134
     15c:	e6 c2       	rjmp	.+1484   	; 0x72a <main+0x52>
     15e:	84 26       	eor	r8, r20
     160:	eb 89       	ldd	r30, Y+19	; 0x13
     162:	8c 9b       	sbis	0x11, 4	; 17
     164:	62 ed       	ldi	r22, 0xD2	; 210
     166:	40 7c       	andi	r20, 0xC0	; 192
     168:	6f fc       	.word	0xfc6f	; ????
     16a:	ef bc       	out	0x2f, r14	; 47
     16c:	9c 9f       	mul	r25, r28
     16e:	40 f2       	brcs	.-112    	; 0x100 <__trampolines_end+0x1c>
     170:	ba a5       	ldd	r27, Y+42	; 0x2a
     172:	6f a5       	ldd	r22, Y+47	; 0x2f
     174:	f4 90       	lpm	r15, Z
     176:	05 5a       	subi	r16, 0xA5	; 165
     178:	2a f7       	brpl	.-54     	; 0x144 <__trampolines_end+0x60>
     17a:	5c 93       	st	X, r21
     17c:	6b 6c       	ori	r22, 0xCB	; 203
     17e:	f9 67       	ori	r31, 0x79	; 121
     180:	6d c1       	rjmp	.+730    	; 0x45c <_Z7printlnf+0x4e>
     182:	1b fc       	.word	0xfc1b	; ????
     184:	e0 e4       	ldi	r30, 0x40	; 64
     186:	0d 47       	sbci	r16, 0x7D	; 125
     188:	fe f5       	brtc	.+126    	; 0x208 <__do_clear_bss>
     18a:	20 e6       	ldi	r18, 0x60	; 96
     18c:	b5 00       	.word	0x00b5	; ????
     18e:	d0 ed       	ldi	r29, 0xD0	; 208
     190:	90 2e       	mov	r9, r16
     192:	03 00       	.word	0x0003	; ????
     194:	94 35       	cpi	r25, 0x54	; 84
     196:	77 05       	cpc	r23, r7
     198:	00 80       	ld	r0, Z
     19a:	84 1e       	adc	r8, r20
     19c:	08 00       	.word	0x0008	; ????
     19e:	00 20       	and	r0, r0
     1a0:	4e 0a       	sbc	r4, r30
     1a2:	00 00       	nop
     1a4:	00 c8       	rjmp	.-4096   	; 0xfffff1a6 <__eeprom_end+0xff7ef1a6>
     1a6:	0c 33       	cpi	r16, 0x3C	; 60
     1a8:	33 33       	cpi	r19, 0x33	; 51
     1aa:	33 0f       	add	r19, r19
     1ac:	98 6e       	ori	r25, 0xE8	; 232
     1ae:	12 83       	std	Z+2, r17	; 0x02
     1b0:	11 41       	sbci	r17, 0x11	; 17
     1b2:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1b4:	21 14       	cp	r2, r1
     1b6:	89 3b       	cpi	r24, 0xB9	; 185
     1b8:	e6 55       	subi	r30, 0x56	; 86
     1ba:	16 cf       	rjmp	.-468    	; 0xffffffe8 <__eeprom_end+0xff7effe8>
     1bc:	fe e6       	ldi	r31, 0x6E	; 110
     1be:	db 18       	sub	r13, r11
     1c0:	d1 84       	ldd	r13, Z+9	; 0x09
     1c2:	4b 38       	cpi	r20, 0x8B	; 139
     1c4:	1b f7       	brvc	.-58     	; 0x18c <__trampolines_end+0xa8>
     1c6:	7c 1d       	adc	r23, r12
     1c8:	90 1d       	adc	r25, r0
     1ca:	a4 bb       	out	0x14, r26	; 20
     1cc:	e4 24       	eor	r14, r4
     1ce:	20 32       	cpi	r18, 0x20	; 32
     1d0:	84 72       	andi	r24, 0x24	; 36
     1d2:	5e 22       	and	r5, r30
     1d4:	81 00       	.word	0x0081	; ????
     1d6:	c9 f1       	breq	.+114    	; 0x24a <_Z10USART0Initv+0x2a>
     1d8:	24 ec       	ldi	r18, 0xC4	; 196
     1da:	a1 e5       	ldi	r26, 0x51	; 81
     1dc:	3d 27       	eor	r19, r29

000001de <__ctors_end>:
     1de:	11 24       	eor	r1, r1
     1e0:	1f be       	out	0x3f, r1	; 63
     1e2:	cf ef       	ldi	r28, 0xFF	; 255
     1e4:	d1 e2       	ldi	r29, 0x21	; 33
     1e6:	de bf       	out	0x3e, r29	; 62
     1e8:	cd bf       	out	0x3d, r28	; 61
     1ea:	00 e0       	ldi	r16, 0x00	; 0
     1ec:	0c bf       	out	0x3c, r16	; 60

000001ee <__do_copy_data>:
     1ee:	12 e0       	ldi	r17, 0x02	; 2
     1f0:	a0 e0       	ldi	r26, 0x00	; 0
     1f2:	b2 e0       	ldi	r27, 0x02	; 2
     1f4:	e2 ee       	ldi	r30, 0xE2	; 226
     1f6:	f2 e1       	ldi	r31, 0x12	; 18
     1f8:	00 e0       	ldi	r16, 0x00	; 0
     1fa:	0b bf       	out	0x3b, r16	; 59
     1fc:	02 c0       	rjmp	.+4      	; 0x202 <__do_copy_data+0x14>
     1fe:	07 90       	elpm	r0, Z+
     200:	0d 92       	st	X+, r0
     202:	ac 33       	cpi	r26, 0x3C	; 60
     204:	b1 07       	cpc	r27, r17
     206:	d9 f7       	brne	.-10     	; 0x1fe <__do_copy_data+0x10>

00000208 <__do_clear_bss>:
     208:	22 e0       	ldi	r18, 0x02	; 2
     20a:	ac e3       	ldi	r26, 0x3C	; 60
     20c:	b2 e0       	ldi	r27, 0x02	; 2
     20e:	01 c0       	rjmp	.+2      	; 0x212 <.do_clear_bss_start>

00000210 <.do_clear_bss_loop>:
     210:	1d 92       	st	X+, r1

00000212 <.do_clear_bss_start>:
     212:	a6 34       	cpi	r26, 0x46	; 70
     214:	b2 07       	cpc	r27, r18
     216:	e1 f7       	brne	.-8      	; 0x210 <.do_clear_bss_loop>
     218:	5f d2       	rcall	.+1214   	; 0x6d8 <main>
     21a:	0c 94 6f 09 	jmp	0x12de	; 0x12de <_exit>

0000021e <__bad_interrupt>:
     21e:	f0 ce       	rjmp	.-544    	; 0x0 <__vectors>

00000220 <_Z10USART0Initv>:
int valorPino = 0;
float voltagem;
int valRMS = 0;
int vPwm = 0;

void USART0Init(void) {
     220:	cf 93       	push	r28
     222:	df 93       	push	r29
     224:	cd b7       	in	r28, 0x3d	; 61
     226:	de b7       	in	r29, 0x3e	; 62
// Set baud rate
	UBRR0H = (uint8_t) (ValorUBRR >> 8); //00000000 01100111 = 00000000 00000000 = 00000000
     228:	85 ec       	ldi	r24, 0xC5	; 197
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	fc 01       	movw	r30, r24
     22e:	10 82       	st	Z, r1
	UBRR0L = (uint8_t) ValorUBRR; //01100111
     230:	84 ec       	ldi	r24, 0xC4	; 196
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	27 e6       	ldi	r18, 0x67	; 103
     236:	fc 01       	movw	r30, r24
     238:	20 83       	st	Z, r18

// Set frame format to 8 data bits, no parity, 1 stop bit
	UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00);
     23a:	82 ec       	ldi	r24, 0xC2	; 194
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	22 ec       	ldi	r18, 0xC2	; 194
     240:	30 e0       	ldi	r19, 0x00	; 0
     242:	f9 01       	movw	r30, r18
     244:	20 81       	ld	r18, Z
     246:	26 60       	ori	r18, 0x06	; 6
     248:	fc 01       	movw	r30, r24
     24a:	20 83       	st	Z, r18

//enable transmission and reception
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0);
     24c:	81 ec       	ldi	r24, 0xC1	; 193
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	21 ec       	ldi	r18, 0xC1	; 193
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	f9 01       	movw	r30, r18
     256:	20 81       	ld	r18, Z
     258:	28 61       	ori	r18, 0x18	; 24
     25a:	fc 01       	movw	r30, r24
     25c:	20 83       	st	Z, r18
}
     25e:	00 00       	nop
     260:	df 91       	pop	r29
     262:	cf 91       	pop	r28
     264:	08 95       	ret

00000266 <_Z14USART0SendByteh>:

void USART0SendByte(uint8_t u8Data) {
     266:	cf 93       	push	r28
     268:	df 93       	push	r29
     26a:	1f 92       	push	r1
     26c:	cd b7       	in	r28, 0x3d	; 61
     26e:	de b7       	in	r29, 0x3e	; 62
     270:	89 83       	std	Y+1, r24	; 0x01
//wait while previous byte is completed
	while (!(UCSR0A & (1 << UDRE0))) { //enquanto o bit UDRE0 no registrador UCSR0A for 0, ainda ha byte no buffer
     272:	80 ec       	ldi	r24, 0xC0	; 192
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	fc 01       	movw	r30, r24
     278:	80 81       	ld	r24, Z
     27a:	88 2f       	mov	r24, r24
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	80 72       	andi	r24, 0x20	; 32
     280:	99 27       	eor	r25, r25
     282:	21 e0       	ldi	r18, 0x01	; 1
     284:	89 2b       	or	r24, r25
     286:	09 f0       	breq	.+2      	; 0x28a <_Z14USART0SendByteh+0x24>
     288:	20 e0       	ldi	r18, 0x00	; 0
     28a:	22 23       	and	r18, r18
     28c:	09 f0       	breq	.+2      	; 0x290 <_Z14USART0SendByteh+0x2a>
     28e:	f1 cf       	rjmp	.-30     	; 0x272 <_Z14USART0SendByteh+0xc>

	};
// Transmit data
	UDR0 = u8Data;
     290:	86 ec       	ldi	r24, 0xC6	; 198
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	29 81       	ldd	r18, Y+1	; 0x01
     296:	fc 01       	movw	r30, r24
     298:	20 83       	st	Z, r18
}
     29a:	00 00       	nop
     29c:	0f 90       	pop	r0
     29e:	df 91       	pop	r29
     2a0:	cf 91       	pop	r28
     2a2:	08 95       	ret

000002a4 <_Z7InitADCv>:
	};
// Return received data
	return UDR0;
}

void InitADC() {
     2a4:	cf 93       	push	r28
     2a6:	df 93       	push	r29
     2a8:	cd b7       	in	r28, 0x3d	; 61
     2aa:	de b7       	in	r29, 0x3e	; 62
	// Select Vref=AVcc=5v
	ADMUX |= (1 << REFS0);
     2ac:	8c e7       	ldi	r24, 0x7C	; 124
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	2c e7       	ldi	r18, 0x7C	; 124
     2b2:	30 e0       	ldi	r19, 0x00	; 0
     2b4:	f9 01       	movw	r30, r18
     2b6:	20 81       	ld	r18, Z
     2b8:	20 64       	ori	r18, 0x40	; 64
     2ba:	fc 01       	movw	r30, r24
     2bc:	20 83       	st	Z, r18

	//set prescaller to 128 and enable ADC
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0) | (1 << ADEN);
     2be:	8a e7       	ldi	r24, 0x7A	; 122
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	2a e7       	ldi	r18, 0x7A	; 122
     2c4:	30 e0       	ldi	r19, 0x00	; 0
     2c6:	f9 01       	movw	r30, r18
     2c8:	20 81       	ld	r18, Z
     2ca:	27 68       	ori	r18, 0x87	; 135
     2cc:	fc 01       	movw	r30, r24
     2ce:	20 83       	st	Z, r18
}
     2d0:	00 00       	nop
     2d2:	df 91       	pop	r29
     2d4:	cf 91       	pop	r28
     2d6:	08 95       	ret

000002d8 <_Z7ReadADCh>:

uint16_t ReadADC(uint8_t ADCchannel) {
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	1f 92       	push	r1
     2de:	cd b7       	in	r28, 0x3d	; 61
     2e0:	de b7       	in	r29, 0x3e	; 62
     2e2:	89 83       	std	Y+1, r24	; 0x01
	//select ADC channel with safety mask
	ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F);
     2e4:	8c e7       	ldi	r24, 0x7C	; 124
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	2c e7       	ldi	r18, 0x7C	; 124
     2ea:	30 e0       	ldi	r19, 0x00	; 0
     2ec:	f9 01       	movw	r30, r18
     2ee:	20 81       	ld	r18, Z
     2f0:	32 2f       	mov	r19, r18
     2f2:	30 7f       	andi	r19, 0xF0	; 240
     2f4:	29 81       	ldd	r18, Y+1	; 0x01
     2f6:	2f 70       	andi	r18, 0x0F	; 15
     2f8:	23 2b       	or	r18, r19
     2fa:	fc 01       	movw	r30, r24
     2fc:	20 83       	st	Z, r18

	//single conversion mode
	ADCSRA |= (1 << ADSC);
     2fe:	8a e7       	ldi	r24, 0x7A	; 122
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	2a e7       	ldi	r18, 0x7A	; 122
     304:	30 e0       	ldi	r19, 0x00	; 0
     306:	f9 01       	movw	r30, r18
     308:	20 81       	ld	r18, Z
     30a:	20 64       	ori	r18, 0x40	; 64
     30c:	fc 01       	movw	r30, r24
     30e:	20 83       	st	Z, r18

	// wait until ADC conversion is complete
	while ( ADCSRA & (1 << ADSC));
     310:	8a e7       	ldi	r24, 0x7A	; 122
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	fc 01       	movw	r30, r24
     316:	80 81       	ld	r24, Z
     318:	88 2f       	mov	r24, r24
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	80 74       	andi	r24, 0x40	; 64
     31e:	99 27       	eor	r25, r25
     320:	21 e0       	ldi	r18, 0x01	; 1
     322:	89 2b       	or	r24, r25
     324:	09 f4       	brne	.+2      	; 0x328 <_Z7ReadADCh+0x50>
     326:	20 e0       	ldi	r18, 0x00	; 0
     328:	22 23       	and	r18, r18
     32a:	09 f0       	breq	.+2      	; 0x32e <_Z7ReadADCh+0x56>
     32c:	f1 cf       	rjmp	.-30     	; 0x310 <_Z7ReadADCh+0x38>

	return ADC;
     32e:	88 e7       	ldi	r24, 0x78	; 120
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	fc 01       	movw	r30, r24
     334:	80 81       	ld	r24, Z
     336:	91 81       	ldd	r25, Z+1	; 0x01
}
     338:	0f 90       	pop	r0
     33a:	df 91       	pop	r29
     33c:	cf 91       	pop	r28
     33e:	08 95       	ret

00000340 <_Z5printPc>:

void print(char st[]) {
     340:	cf 93       	push	r28
     342:	df 93       	push	r29
     344:	00 d0       	rcall	.+0      	; 0x346 <_Z5printPc+0x6>
     346:	1f 92       	push	r1
     348:	cd b7       	in	r28, 0x3d	; 61
     34a:	de b7       	in	r29, 0x3e	; 62
     34c:	9c 83       	std	Y+4, r25	; 0x04
     34e:	8b 83       	std	Y+3, r24	; 0x03
	int i = 0;
     350:	1a 82       	std	Y+2, r1	; 0x02
     352:	19 82       	std	Y+1, r1	; 0x01

	while (st[i] != 0x00) {
     354:	89 81       	ldd	r24, Y+1	; 0x01
     356:	9a 81       	ldd	r25, Y+2	; 0x02
     358:	2b 81       	ldd	r18, Y+3	; 0x03
     35a:	3c 81       	ldd	r19, Y+4	; 0x04
     35c:	82 0f       	add	r24, r18
     35e:	93 1f       	adc	r25, r19
     360:	fc 01       	movw	r30, r24
     362:	80 81       	ld	r24, Z
     364:	88 23       	and	r24, r24
     366:	79 f0       	breq	.+30     	; 0x386 <_Z5printPc+0x46>
		USART0SendByte(st[i]);
     368:	89 81       	ldd	r24, Y+1	; 0x01
     36a:	9a 81       	ldd	r25, Y+2	; 0x02
     36c:	2b 81       	ldd	r18, Y+3	; 0x03
     36e:	3c 81       	ldd	r19, Y+4	; 0x04
     370:	82 0f       	add	r24, r18
     372:	93 1f       	adc	r25, r19
     374:	fc 01       	movw	r30, r24
     376:	80 81       	ld	r24, Z
     378:	76 df       	rcall	.-276    	; 0x266 <_Z14USART0SendByteh>
		i++;
     37a:	89 81       	ldd	r24, Y+1	; 0x01
     37c:	9a 81       	ldd	r25, Y+2	; 0x02
     37e:	01 96       	adiw	r24, 0x01	; 1
     380:	9a 83       	std	Y+2, r25	; 0x02
     382:	89 83       	std	Y+1, r24	; 0x01
}

void print(char st[]) {
	int i = 0;

	while (st[i] != 0x00) {
     384:	e7 cf       	rjmp	.-50     	; 0x354 <_Z5printPc+0x14>
		USART0SendByte(st[i]);
		i++;
	}
}
     386:	00 00       	nop
     388:	0f 90       	pop	r0
     38a:	0f 90       	pop	r0
     38c:	0f 90       	pop	r0
     38e:	0f 90       	pop	r0
     390:	df 91       	pop	r29
     392:	cf 91       	pop	r28
     394:	08 95       	ret

00000396 <_Z5printi>:

void print(int num) {
     396:	cf 93       	push	r28
     398:	df 93       	push	r29
     39a:	cd b7       	in	r28, 0x3d	; 61
     39c:	de b7       	in	r29, 0x3e	; 62
     39e:	2b 97       	sbiw	r28, 0x0b	; 11
     3a0:	0f b6       	in	r0, 0x3f	; 63
     3a2:	f8 94       	cli
     3a4:	de bf       	out	0x3e, r29	; 62
     3a6:	0f be       	out	0x3f, r0	; 63
     3a8:	cd bf       	out	0x3d, r28	; 61
     3aa:	9b 87       	std	Y+11, r25	; 0x0b
     3ac:	8a 87       	std	Y+10, r24	; 0x0a
	char myString[7];
	itoa(num, myString, 10);
     3ae:	9e 01       	movw	r18, r28
     3b0:	2d 5f       	subi	r18, 0xFD	; 253
     3b2:	3f 4f       	sbci	r19, 0xFF	; 255
     3b4:	8a 85       	ldd	r24, Y+10	; 0x0a
     3b6:	9b 85       	ldd	r25, Y+11	; 0x0b
     3b8:	4a e0       	ldi	r20, 0x0A	; 10
     3ba:	50 e0       	ldi	r21, 0x00	; 0
     3bc:	b9 01       	movw	r22, r18
     3be:	04 d5       	rcall	.+2568   	; 0xdc8 <itoa>

	int i = 0;
     3c0:	1a 82       	std	Y+2, r1	; 0x02
     3c2:	19 82       	std	Y+1, r1	; 0x01

	while (myString[i] != 0x00) {
     3c4:	9e 01       	movw	r18, r28
     3c6:	2d 5f       	subi	r18, 0xFD	; 253
     3c8:	3f 4f       	sbci	r19, 0xFF	; 255
     3ca:	89 81       	ldd	r24, Y+1	; 0x01
     3cc:	9a 81       	ldd	r25, Y+2	; 0x02
     3ce:	82 0f       	add	r24, r18
     3d0:	93 1f       	adc	r25, r19
     3d2:	fc 01       	movw	r30, r24
     3d4:	80 81       	ld	r24, Z
     3d6:	88 23       	and	r24, r24
     3d8:	81 f0       	breq	.+32     	; 0x3fa <_Z5printi+0x64>
		USART0SendByte(myString[i]);
     3da:	9e 01       	movw	r18, r28
     3dc:	2d 5f       	subi	r18, 0xFD	; 253
     3de:	3f 4f       	sbci	r19, 0xFF	; 255
     3e0:	89 81       	ldd	r24, Y+1	; 0x01
     3e2:	9a 81       	ldd	r25, Y+2	; 0x02
     3e4:	82 0f       	add	r24, r18
     3e6:	93 1f       	adc	r25, r19
     3e8:	fc 01       	movw	r30, r24
     3ea:	80 81       	ld	r24, Z
     3ec:	3c df       	rcall	.-392    	; 0x266 <_Z14USART0SendByteh>
		i++;
     3ee:	89 81       	ldd	r24, Y+1	; 0x01
     3f0:	9a 81       	ldd	r25, Y+2	; 0x02
     3f2:	01 96       	adiw	r24, 0x01	; 1
     3f4:	9a 83       	std	Y+2, r25	; 0x02
     3f6:	89 83       	std	Y+1, r24	; 0x01
	char myString[7];
	itoa(num, myString, 10);

	int i = 0;

	while (myString[i] != 0x00) {
     3f8:	e5 cf       	rjmp	.-54     	; 0x3c4 <_Z5printi+0x2e>
		USART0SendByte(myString[i]);
		i++;
	}
}
     3fa:	00 00       	nop
     3fc:	2b 96       	adiw	r28, 0x0b	; 11
     3fe:	0f b6       	in	r0, 0x3f	; 63
     400:	f8 94       	cli
     402:	de bf       	out	0x3e, r29	; 62
     404:	0f be       	out	0x3f, r0	; 63
     406:	cd bf       	out	0x3d, r28	; 61
     408:	df 91       	pop	r29
     40a:	cf 91       	pop	r28
     40c:	08 95       	ret

0000040e <_Z7printlnf>:
	}
	USART0SendByte(0x0A); //nova linha
	USART0SendByte(0x0D); //retorno do cursor
}

void println(float num) {
     40e:	0f 93       	push	r16
     410:	1f 93       	push	r17
     412:	cf 93       	push	r28
     414:	df 93       	push	r29
     416:	cd b7       	in	r28, 0x3d	; 61
     418:	de b7       	in	r29, 0x3e	; 62
     41a:	6a 97       	sbiw	r28, 0x1a	; 26
     41c:	0f b6       	in	r0, 0x3f	; 63
     41e:	f8 94       	cli
     420:	de bf       	out	0x3e, r29	; 62
     422:	0f be       	out	0x3f, r0	; 63
     424:	cd bf       	out	0x3d, r28	; 61
     426:	6f 8b       	std	Y+23, r22	; 0x17
     428:	78 8f       	std	Y+24, r23	; 0x18
     42a:	89 8f       	std	Y+25, r24	; 0x19
     42c:	9a 8f       	std	Y+26, r25	; 0x1a
	char myString[20];

	dtostrf(num, 4, 2, myString);
     42e:	9e 01       	movw	r18, r28
     430:	2d 5f       	subi	r18, 0xFD	; 253
     432:	3f 4f       	sbci	r19, 0xFF	; 255
     434:	8f 89       	ldd	r24, Y+23	; 0x17
     436:	98 8d       	ldd	r25, Y+24	; 0x18
     438:	a9 8d       	ldd	r26, Y+25	; 0x19
     43a:	ba 8d       	ldd	r27, Y+26	; 0x1a
     43c:	89 01       	movw	r16, r18
     43e:	22 e0       	ldi	r18, 0x02	; 2
     440:	44 e0       	ldi	r20, 0x04	; 4
     442:	bc 01       	movw	r22, r24
     444:	cd 01       	movw	r24, r26
     446:	a1 d4       	rcall	.+2370   	; 0xd8a <dtostrf>

	int i = 0;
     448:	1a 82       	std	Y+2, r1	; 0x02
     44a:	19 82       	std	Y+1, r1	; 0x01

	while (myString[i] != 0x00) {
     44c:	9e 01       	movw	r18, r28
     44e:	2d 5f       	subi	r18, 0xFD	; 253
     450:	3f 4f       	sbci	r19, 0xFF	; 255
     452:	89 81       	ldd	r24, Y+1	; 0x01
     454:	9a 81       	ldd	r25, Y+2	; 0x02
     456:	82 0f       	add	r24, r18
     458:	93 1f       	adc	r25, r19
     45a:	fc 01       	movw	r30, r24
     45c:	80 81       	ld	r24, Z
     45e:	88 23       	and	r24, r24
     460:	81 f0       	breq	.+32     	; 0x482 <_Z7printlnf+0x74>
		USART0SendByte(myString[i]);
     462:	9e 01       	movw	r18, r28
     464:	2d 5f       	subi	r18, 0xFD	; 253
     466:	3f 4f       	sbci	r19, 0xFF	; 255
     468:	89 81       	ldd	r24, Y+1	; 0x01
     46a:	9a 81       	ldd	r25, Y+2	; 0x02
     46c:	82 0f       	add	r24, r18
     46e:	93 1f       	adc	r25, r19
     470:	fc 01       	movw	r30, r24
     472:	80 81       	ld	r24, Z
     474:	f8 de       	rcall	.-528    	; 0x266 <_Z14USART0SendByteh>
		i++;
     476:	89 81       	ldd	r24, Y+1	; 0x01
     478:	9a 81       	ldd	r25, Y+2	; 0x02
     47a:	01 96       	adiw	r24, 0x01	; 1
     47c:	9a 83       	std	Y+2, r25	; 0x02

	dtostrf(num, 4, 2, myString);

	int i = 0;

	while (myString[i] != 0x00) {
     47e:	89 83       	std	Y+1, r24	; 0x01
		USART0SendByte(myString[i]);
		i++;
	}
	USART0SendByte(0x0A); //nova linha
     480:	e5 cf       	rjmp	.-54     	; 0x44c <_Z7printlnf+0x3e>
     482:	8a e0       	ldi	r24, 0x0A	; 10
	USART0SendByte(0x0D); //retorno do cursor
     484:	f0 de       	rcall	.-544    	; 0x266 <_Z14USART0SendByteh>
     486:	8d e0       	ldi	r24, 0x0D	; 13
     488:	ee de       	rcall	.-548    	; 0x266 <_Z14USART0SendByteh>
}
     48a:	00 00       	nop
     48c:	6a 96       	adiw	r28, 0x1a	; 26
     48e:	0f b6       	in	r0, 0x3f	; 63
     490:	f8 94       	cli
     492:	de bf       	out	0x3e, r29	; 62
     494:	0f be       	out	0x3f, r0	; 63
     496:	cd bf       	out	0x3d, r28	; 61
     498:	df 91       	pop	r29
     49a:	cf 91       	pop	r28
     49c:	1f 91       	pop	r17
     49e:	0f 91       	pop	r16
     4a0:	08 95       	ret

000004a2 <_Z3RMSi>:

float RMS(int repeat) {
     4a2:	cf 93       	push	r28
     4a4:	df 93       	push	r29
     4a6:	cd b7       	in	r28, 0x3d	; 61
     4a8:	de b7       	in	r29, 0x3e	; 62
     4aa:	60 97       	sbiw	r28, 0x10	; 16
     4ac:	0f b6       	in	r0, 0x3f	; 63
     4ae:	f8 94       	cli
     4b0:	de bf       	out	0x3e, r29	; 62
     4b2:	0f be       	out	0x3f, r0	; 63
     4b4:	cd bf       	out	0x3d, r28	; 61
     4b6:	98 8b       	std	Y+16, r25	; 0x10
     4b8:	8f 87       	std	Y+15, r24	; 0x0f
	int x = 0;
     4ba:	1a 82       	std	Y+2, r1	; 0x02
     4bc:	19 82       	std	Y+1, r1	; 0x01
	long digital_value = 0;
     4be:	1f 82       	std	Y+7, r1	; 0x07
     4c0:	18 86       	std	Y+8, r1	; 0x08
     4c2:	19 86       	std	Y+9, r1	; 0x09
     4c4:	1a 86       	std	Y+10, r1	; 0x0a
	long accumulated = 0;
     4c6:	1b 82       	std	Y+3, r1	; 0x03
     4c8:	1c 82       	std	Y+4, r1	; 0x04
     4ca:	1d 82       	std	Y+5, r1	; 0x05
     4cc:	1e 82       	std	Y+6, r1	; 0x06
	long average = 0;
     4ce:	1b 86       	std	Y+11, r1	; 0x0b
     4d0:	1c 86       	std	Y+12, r1	; 0x0c
     4d2:	1d 86       	std	Y+13, r1	; 0x0d
     4d4:	1e 86       	std	Y+14, r1	; 0x0e

	do {
		digital_value = ReadADC(analogInPin);
     4d6:	80 e0       	ldi	r24, 0x00	; 0
     4d8:	ff de       	rcall	.-514    	; 0x2d8 <_Z7ReadADCh>
     4da:	cc 01       	movw	r24, r24
     4dc:	a0 e0       	ldi	r26, 0x00	; 0
     4de:	b0 e0       	ldi	r27, 0x00	; 0
     4e0:	8f 83       	std	Y+7, r24	; 0x07
     4e2:	98 87       	std	Y+8, r25	; 0x08
     4e4:	a9 87       	std	Y+9, r26	; 0x09
     4e6:	ba 87       	std	Y+10, r27	; 0x0a
		accumulated += digital_value * digital_value;
     4e8:	2f 81       	ldd	r18, Y+7	; 0x07
     4ea:	38 85       	ldd	r19, Y+8	; 0x08
     4ec:	49 85       	ldd	r20, Y+9	; 0x09
     4ee:	5a 85       	ldd	r21, Y+10	; 0x0a
     4f0:	8f 81       	ldd	r24, Y+7	; 0x07
     4f2:	98 85       	ldd	r25, Y+8	; 0x08
     4f4:	a9 85       	ldd	r26, Y+9	; 0x09
     4f6:	ba 85       	ldd	r27, Y+10	; 0x0a
     4f8:	bc 01       	movw	r22, r24
     4fa:	cd 01       	movw	r24, r26
     4fc:	d3 d1       	rcall	.+934    	; 0x8a4 <__mulsi3>
     4fe:	9b 01       	movw	r18, r22
     500:	ac 01       	movw	r20, r24
     502:	8b 81       	ldd	r24, Y+3	; 0x03
     504:	9c 81       	ldd	r25, Y+4	; 0x04
     506:	ad 81       	ldd	r26, Y+5	; 0x05
     508:	be 81       	ldd	r27, Y+6	; 0x06
     50a:	82 0f       	add	r24, r18
     50c:	93 1f       	adc	r25, r19
     50e:	a4 1f       	adc	r26, r20
     510:	b5 1f       	adc	r27, r21
     512:	8b 83       	std	Y+3, r24	; 0x03
     514:	9c 83       	std	Y+4, r25	; 0x04
     516:	ad 83       	std	Y+5, r26	; 0x05
     518:	be 83       	std	Y+6, r27	; 0x06
		x++;
     51a:	89 81       	ldd	r24, Y+1	; 0x01
     51c:	9a 81       	ldd	r25, Y+2	; 0x02
     51e:	01 96       	adiw	r24, 0x01	; 1
     520:	9a 83       	std	Y+2, r25	; 0x02
     522:	89 83       	std	Y+1, r24	; 0x01
	} while (x < repeat);
     524:	29 81       	ldd	r18, Y+1	; 0x01
     526:	3a 81       	ldd	r19, Y+2	; 0x02
     528:	8f 85       	ldd	r24, Y+15	; 0x0f
     52a:	98 89       	ldd	r25, Y+16	; 0x10
     52c:	28 17       	cp	r18, r24
     52e:	39 07       	cpc	r19, r25
     530:	0c f4       	brge	.+2      	; 0x534 <_Z3RMSi+0x92>
	int x = 0;
	long digital_value = 0;
	long accumulated = 0;
	long average = 0;

	do {
     532:	d1 cf       	rjmp	.-94     	; 0x4d6 <_Z3RMSi+0x34>
		digital_value = ReadADC(analogInPin);
		accumulated += digital_value * digital_value;
		x++;
	} while (x < repeat);

	average = accumulated / repeat;
     534:	8f 85       	ldd	r24, Y+15	; 0x0f
     536:	98 89       	ldd	r25, Y+16	; 0x10
     538:	9c 01       	movw	r18, r24
     53a:	99 0f       	add	r25, r25
     53c:	44 0b       	sbc	r20, r20
     53e:	55 0b       	sbc	r21, r21
     540:	8b 81       	ldd	r24, Y+3	; 0x03
     542:	9c 81       	ldd	r25, Y+4	; 0x04
     544:	ad 81       	ldd	r26, Y+5	; 0x05
     546:	be 81       	ldd	r27, Y+6	; 0x06
     548:	bc 01       	movw	r22, r24
     54a:	cd 01       	movw	r24, r26
     54c:	ba d1       	rcall	.+884    	; 0x8c2 <__divmodsi4>
     54e:	da 01       	movw	r26, r20
     550:	c9 01       	movw	r24, r18
     552:	8b 87       	std	Y+11, r24	; 0x0b
     554:	9c 87       	std	Y+12, r25	; 0x0c
     556:	ad 87       	std	Y+13, r26	; 0x0d
     558:	be 87       	std	Y+14, r27	; 0x0e

	return sqrt(average);
     55a:	6b 85       	ldd	r22, Y+11	; 0x0b
     55c:	7c 85       	ldd	r23, Y+12	; 0x0c
     55e:	8d 85       	ldd	r24, Y+13	; 0x0d
     560:	9e 85       	ldd	r25, Y+14	; 0x0e
     562:	a5 d2       	rcall	.+1354   	; 0xaae <__floatsisf>
     564:	dc 01       	movw	r26, r24
     566:	cb 01       	movw	r24, r22
     568:	bc 01       	movw	r22, r24
     56a:	cd 01       	movw	r24, r26
     56c:	bb d3       	rcall	.+1910   	; 0xce4 <sqrt>
     56e:	dc 01       	movw	r26, r24
     570:	cb 01       	movw	r24, r22
}
     572:	bc 01       	movw	r22, r24
     574:	cd 01       	movw	r24, r26
     576:	60 96       	adiw	r28, 0x10	; 16
     578:	0f b6       	in	r0, 0x3f	; 63
     57a:	f8 94       	cli
     57c:	de bf       	out	0x3e, r29	; 62
     57e:	0f be       	out	0x3f, r0	; 63
     580:	cd bf       	out	0x3d, r28	; 61
     582:	df 91       	pop	r29
     584:	cf 91       	pop	r28
     586:	08 95       	ret

00000588 <_Z4voltf>:

float volt(float valor) {
     588:	cf 93       	push	r28
     58a:	df 93       	push	r29
     58c:	cd b7       	in	r28, 0x3d	; 61
     58e:	de b7       	in	r29, 0x3e	; 62
     590:	2c 97       	sbiw	r28, 0x0c	; 12
     592:	0f b6       	in	r0, 0x3f	; 63
     594:	f8 94       	cli
     596:	de bf       	out	0x3e, r29	; 62
     598:	0f be       	out	0x3f, r0	; 63
     59a:	cd bf       	out	0x3d, r28	; 61
     59c:	69 87       	std	Y+9, r22	; 0x09
     59e:	7a 87       	std	Y+10, r23	; 0x0a
     5a0:	8b 87       	std	Y+11, r24	; 0x0b
     5a2:	9c 87       	std	Y+12, r25	; 0x0c
	float a1 = 5.0;
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	a0 ea       	ldi	r26, 0xA0	; 160
     5aa:	b0 e4       	ldi	r27, 0x40	; 64
     5ac:	89 83       	std	Y+1, r24	; 0x01
     5ae:	9a 83       	std	Y+2, r25	; 0x02
     5b0:	ab 83       	std	Y+3, r26	; 0x03
     5b2:	bc 83       	std	Y+4, r27	; 0x04
	float a2 = 1023.0;
     5b4:	80 e0       	ldi	r24, 0x00	; 0
     5b6:	90 ec       	ldi	r25, 0xC0	; 192
     5b8:	af e7       	ldi	r26, 0x7F	; 127
     5ba:	b4 e4       	ldi	r27, 0x44	; 68
     5bc:	8d 83       	std	Y+5, r24	; 0x05
     5be:	9e 83       	std	Y+6, r25	; 0x06
     5c0:	af 83       	std	Y+7, r26	; 0x07
     5c2:	b8 87       	std	Y+8, r27	; 0x08
	return (valor * (a1 / a2));
     5c4:	2d 81       	ldd	r18, Y+5	; 0x05
     5c6:	3e 81       	ldd	r19, Y+6	; 0x06
     5c8:	4f 81       	ldd	r20, Y+7	; 0x07
     5ca:	58 85       	ldd	r21, Y+8	; 0x08
     5cc:	69 81       	ldd	r22, Y+1	; 0x01
     5ce:	7a 81       	ldd	r23, Y+2	; 0x02
     5d0:	8b 81       	ldd	r24, Y+3	; 0x03
     5d2:	9c 81       	ldd	r25, Y+4	; 0x04
     5d4:	d1 d1       	rcall	.+930    	; 0x978 <__divsf3>
     5d6:	dc 01       	movw	r26, r24
     5d8:	cb 01       	movw	r24, r22
     5da:	29 85       	ldd	r18, Y+9	; 0x09
     5dc:	3a 85       	ldd	r19, Y+10	; 0x0a
     5de:	4b 85       	ldd	r20, Y+11	; 0x0b
     5e0:	5c 85       	ldd	r21, Y+12	; 0x0c
     5e2:	bc 01       	movw	r22, r24
     5e4:	cd 01       	movw	r24, r26
     5e6:	17 d3       	rcall	.+1582   	; 0xc16 <__mulsf3>
     5e8:	dc 01       	movw	r26, r24
     5ea:	cb 01       	movw	r24, r22

}
     5ec:	bc 01       	movw	r22, r24
     5ee:	cd 01       	movw	r24, r26
     5f0:	2c 96       	adiw	r28, 0x0c	; 12
     5f2:	0f b6       	in	r0, 0x3f	; 63
     5f4:	f8 94       	cli
     5f6:	de bf       	out	0x3e, r29	; 62
     5f8:	0f be       	out	0x3f, r0	; 63
     5fa:	cd bf       	out	0x3d, r28	; 61
     5fc:	df 91       	pop	r29
     5fe:	cf 91       	pop	r28
     600:	08 95       	ret

00000602 <_Z8valorPWMi>:

float valorPWM(int valor) {
     602:	cf 92       	push	r12
     604:	df 92       	push	r13
     606:	ef 92       	push	r14
     608:	ff 92       	push	r15
     60a:	cf 93       	push	r28
     60c:	df 93       	push	r29
     60e:	cd b7       	in	r28, 0x3d	; 61
     610:	de b7       	in	r29, 0x3e	; 62
     612:	2a 97       	sbiw	r28, 0x0a	; 10
     614:	0f b6       	in	r0, 0x3f	; 63
     616:	f8 94       	cli
     618:	de bf       	out	0x3e, r29	; 62
     61a:	0f be       	out	0x3f, r0	; 63
     61c:	cd bf       	out	0x3d, r28	; 61
     61e:	9a 87       	std	Y+10, r25	; 0x0a
     620:	89 87       	std	Y+9, r24	; 0x09
	float a1 = 255;
     622:	80 e0       	ldi	r24, 0x00	; 0
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	af e7       	ldi	r26, 0x7F	; 127
     628:	b3 e4       	ldi	r27, 0x43	; 67
     62a:	89 83       	std	Y+1, r24	; 0x01
     62c:	9a 83       	std	Y+2, r25	; 0x02
     62e:	ab 83       	std	Y+3, r26	; 0x03
     630:	bc 83       	std	Y+4, r27	; 0x04
	float a2 = 1023;
     632:	80 e0       	ldi	r24, 0x00	; 0
     634:	90 ec       	ldi	r25, 0xC0	; 192
     636:	af e7       	ldi	r26, 0x7F	; 127
     638:	b4 e4       	ldi	r27, 0x44	; 68
     63a:	8d 83       	std	Y+5, r24	; 0x05
     63c:	9e 83       	std	Y+6, r25	; 0x06
     63e:	af 83       	std	Y+7, r26	; 0x07
     640:	b8 87       	std	Y+8, r27	; 0x08
	return (valor * (a1 / a2));
     642:	89 85       	ldd	r24, Y+9	; 0x09
     644:	9a 85       	ldd	r25, Y+10	; 0x0a
     646:	09 2e       	mov	r0, r25
     648:	00 0c       	add	r0, r0
     64a:	aa 0b       	sbc	r26, r26
     64c:	bb 0b       	sbc	r27, r27
     64e:	bc 01       	movw	r22, r24
     650:	cd 01       	movw	r24, r26
     652:	2d d2       	rcall	.+1114   	; 0xaae <__floatsisf>
     654:	6b 01       	movw	r12, r22
     656:	7c 01       	movw	r14, r24
     658:	2d 81       	ldd	r18, Y+5	; 0x05
     65a:	3e 81       	ldd	r19, Y+6	; 0x06
     65c:	4f 81       	ldd	r20, Y+7	; 0x07
     65e:	58 85       	ldd	r21, Y+8	; 0x08
     660:	69 81       	ldd	r22, Y+1	; 0x01
     662:	7a 81       	ldd	r23, Y+2	; 0x02
     664:	8b 81       	ldd	r24, Y+3	; 0x03
     666:	9c 81       	ldd	r25, Y+4	; 0x04
     668:	87 d1       	rcall	.+782    	; 0x978 <__divsf3>
     66a:	dc 01       	movw	r26, r24
     66c:	cb 01       	movw	r24, r22
     66e:	9c 01       	movw	r18, r24
     670:	ad 01       	movw	r20, r26
     672:	c7 01       	movw	r24, r14
     674:	b6 01       	movw	r22, r12
     676:	cf d2       	rcall	.+1438   	; 0xc16 <__mulsf3>
     678:	dc 01       	movw	r26, r24
     67a:	cb 01       	movw	r24, r22

}
     67c:	bc 01       	movw	r22, r24
     67e:	cd 01       	movw	r24, r26
     680:	2a 96       	adiw	r28, 0x0a	; 10
     682:	0f b6       	in	r0, 0x3f	; 63
     684:	f8 94       	cli
     686:	de bf       	out	0x3e, r29	; 62
     688:	0f be       	out	0x3f, r0	; 63
     68a:	cd bf       	out	0x3d, r28	; 61
     68c:	df 91       	pop	r29
     68e:	cf 91       	pop	r28
     690:	ff 90       	pop	r15
     692:	ef 90       	pop	r14
     694:	df 90       	pop	r13
     696:	cf 90       	pop	r12
     698:	08 95       	ret

0000069a <_Z10pwm_init10v>:

// initialize PWM
void pwm_init10() {
     69a:	cf 93       	push	r28
     69c:	df 93       	push	r29
     69e:	cd b7       	in	r28, 0x3d	; 61
     6a0:	de b7       	in	r29, 0x3e	; 62
	// initialize timer0 in PWM mode
	//TCCR0 |= (1 << WGM00) | (1 << COM01) | (1 << WGM01) | (1 << CS00);

	//--pino 10-- DDH4 pino 10 da placa
	//pino 10 como saída
	DDRB |= (1 << DDB4);
     6a2:	84 e2       	ldi	r24, 0x24	; 36
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	24 e2       	ldi	r18, 0x24	; 36
     6a8:	30 e0       	ldi	r19, 0x00	; 0
     6aa:	f9 01       	movw	r30, r18
     6ac:	20 81       	ld	r18, Z
     6ae:	20 61       	ori	r18, 0x10	; 16
     6b0:	fc 01       	movw	r30, r24
     6b2:	20 83       	st	Z, r18

	//TCCR2A –Timer/Counter Control Register A
	// Set Clear OC2A on Compare Match, Fast PWM
	TCCR2A  = ((1 << COM2A1) | (1 << WGM21) | (1 << WGM20)); //0XA3 - configura pino 10 saida pwm e modo fast PWM
     6b4:	80 eb       	ldi	r24, 0xB0	; 176
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	23 e8       	ldi	r18, 0x83	; 131
     6ba:	fc 01       	movw	r30, r24
     6bc:	20 83       	st	Z, r18

	//TCCR2B – Timer/Counter Control Register B
	//sem divisão de prescaling, WGM22 = 0 para Fast PWM
	TCCR2B  = ((1 << CS20)); //0X01
     6be:	81 eb       	ldi	r24, 0xB1	; 177
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	21 e0       	ldi	r18, 0x01	; 1
     6c4:	fc 01       	movw	r30, r24
     6c6:	20 83       	st	Z, r18

	OCR2A=0; //gera uma saída de forma de onda no pino OC2A.
     6c8:	83 eb       	ldi	r24, 0xB3	; 179
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	fc 01       	movw	r30, r24
     6ce:	10 82       	st	Z, r1

}
     6d0:	00 00       	nop
     6d2:	df 91       	pop	r29
     6d4:	cf 91       	pop	r28
     6d6:	08 95       	ret

000006d8 <main>:

int main(void) {
     6d8:	cf 93       	push	r28
     6da:	df 93       	push	r29
     6dc:	cd b7       	in	r28, 0x3d	; 61
     6de:	de b7       	in	r29, 0x3e	; 62
     6e0:	2e 97       	sbiw	r28, 0x0e	; 14
     6e2:	0f b6       	in	r0, 0x3f	; 63
     6e4:	f8 94       	cli
     6e6:	de bf       	out	0x3e, r29	; 62
     6e8:	0f be       	out	0x3f, r0	; 63

	//Iniciar USART0
	USART0Init();
	//Iniciar PWM no pino 10
	pwm_init10();
     6ea:	cd bf       	out	0x3d, r28	; 61
	//Iniciar ADC
	InitADC();
     6ec:	99 dd       	rcall	.-1230   	; 0x220 <_Z10USART0Initv>
     6ee:	d5 df       	rcall	.-86     	; 0x69a <_Z10pwm_init10v>


	while (1) {
		//Le pino A0
		valorPino = ReadADC(analogInPin);
     6f0:	d9 dd       	rcall	.-1102   	; 0x2a4 <_Z7InitADCv>
     6f2:	80 e0       	ldi	r24, 0x00	; 0
     6f4:	f1 dd       	rcall	.-1054   	; 0x2d8 <_Z7ReadADCh>
     6f6:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <__data_end+0x1>
     6fa:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <__data_end>

		//Valor em volts do valor lido em A0
		voltagem = volt(valorPino);
     6fe:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <__data_end>
     702:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <__data_end+0x1>
     706:	09 2e       	mov	r0, r25
     708:	00 0c       	add	r0, r0
     70a:	aa 0b       	sbc	r26, r26
     70c:	bb 0b       	sbc	r27, r27
     70e:	bc 01       	movw	r22, r24
     710:	cd 01       	movw	r24, r26
     712:	cd d1       	rcall	.+922    	; 0xaae <__floatsisf>
     714:	dc 01       	movw	r26, r24
     716:	cb 01       	movw	r24, r22
     718:	bc 01       	movw	r22, r24
     71a:	cd 01       	movw	r24, r26
     71c:	35 df       	rcall	.-406    	; 0x588 <_Z4voltf>
     71e:	dc 01       	movw	r26, r24
     720:	cb 01       	movw	r24, r22
     722:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <voltagem>
     726:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <voltagem+0x1>
     72a:	a0 93 40 02 	sts	0x0240, r26	; 0x800240 <voltagem+0x2>
     72e:	b0 93 41 02 	sts	0x0241, r27	; 0x800241 <voltagem+0x3>

		//Valor RMS do do valor lido em A0
		valRMS = RMS(30);
     732:	8e e1       	ldi	r24, 0x1E	; 30
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	b5 de       	rcall	.-662    	; 0x4a2 <_Z3RMSi>
     738:	dc 01       	movw	r26, r24
     73a:	cb 01       	movw	r24, r22
     73c:	bc 01       	movw	r22, r24
     73e:	cd 01       	movw	r24, r26
     740:	83 d1       	rcall	.+774    	; 0xa48 <__fixsfsi>
     742:	dc 01       	movw	r26, r24
     744:	cb 01       	movw	r24, r22
     746:	90 93 43 02 	sts	0x0243, r25	; 0x800243 <valRMS+0x1>
     74a:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <valRMS>

		//Valor PWM do do valor lido em A0
		vPwm = valorPWM(valorPino);
     74e:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <__data_end>
     752:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <__data_end+0x1>
     756:	55 df       	rcall	.-342    	; 0x602 <_Z8valorPWMi>
     758:	dc 01       	movw	r26, r24
     75a:	cb 01       	movw	r24, r22
     75c:	bc 01       	movw	r22, r24
     75e:	cd 01       	movw	r24, r26
     760:	73 d1       	rcall	.+742    	; 0xa48 <__fixsfsi>
     762:	dc 01       	movw	r26, r24
     764:	cb 01       	movw	r24, r22
     766:	90 93 45 02 	sts	0x0245, r25	; 0x800245 <vPwm+0x1>
     76a:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <vPwm>

		//Atualiza valor PWM no pino 10 para mudar intensidade do led
		OCR2A = vPwm;
     76e:	83 eb       	ldi	r24, 0xB3	; 179
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	20 91 44 02 	lds	r18, 0x0244	; 0x800244 <vPwm>
     776:	30 91 45 02 	lds	r19, 0x0245	; 0x800245 <vPwm+0x1>

		//Imprimir os resultados
		print("Valor analogico = ");
     77a:	fc 01       	movw	r30, r24
     77c:	20 83       	st	Z, r18
     77e:	80 e0       	ldi	r24, 0x00	; 0
		print(valorPino);
     780:	92 e0       	ldi	r25, 0x02	; 2
     782:	de dd       	rcall	.-1092   	; 0x340 <_Z5printPc>
     784:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <__data_end>

		print("\tValor PWM = ");
     788:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <__data_end+0x1>
     78c:	04 de       	rcall	.-1016   	; 0x396 <_Z5printi>
		print(vPwm);
     78e:	83 e1       	ldi	r24, 0x13	; 19
     790:	92 e0       	ldi	r25, 0x02	; 2
     792:	d6 dd       	rcall	.-1108   	; 0x340 <_Z5printPc>
     794:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <vPwm>

		print("\t Valor RMS = ");
     798:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <vPwm+0x1>
     79c:	fc dd       	rcall	.-1032   	; 0x396 <_Z5printi>
     79e:	81 e2       	ldi	r24, 0x21	; 33
		print(valRMS);
     7a0:	92 e0       	ldi	r25, 0x02	; 2
     7a2:	ce dd       	rcall	.-1124   	; 0x340 <_Z5printPc>
     7a4:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <valRMS>
     7a8:	90 91 43 02 	lds	r25, 0x0243	; 0x800243 <valRMS+0x1>

		print("\t volts = ");
     7ac:	f4 dd       	rcall	.-1048   	; 0x396 <_Z5printi>
     7ae:	80 e3       	ldi	r24, 0x30	; 48
     7b0:	92 e0       	ldi	r25, 0x02	; 2
		println(voltagem);
     7b2:	c6 dd       	rcall	.-1140   	; 0x340 <_Z5printPc>
     7b4:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <voltagem>
     7b8:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <voltagem+0x1>
     7bc:	a0 91 40 02 	lds	r26, 0x0240	; 0x800240 <voltagem+0x2>
     7c0:	b0 91 41 02 	lds	r27, 0x0241	; 0x800241 <voltagem+0x3>
     7c4:	bc 01       	movw	r22, r24
     7c6:	cd 01       	movw	r24, r26
     7c8:	22 de       	rcall	.-956    	; 0x40e <_Z7printlnf>
     7ca:	80 e0       	ldi	r24, 0x00	; 0
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	a0 e2       	ldi	r26, 0x20	; 32
     7d0:	b1 e4       	ldi	r27, 0x41	; 65
     7d2:	89 83       	std	Y+1, r24	; 0x01
     7d4:	9a 83       	std	Y+2, r25	; 0x02
     7d6:	ab 83       	std	Y+3, r26	; 0x03
	//sem divisão de prescaling, WGM22 = 0 para Fast PWM
	TCCR2B  = ((1 << CS20)); //0X01

	OCR2A=0; //gera uma saída de forma de onda no pino OC2A.

}
     7d8:	bc 83       	std	Y+4, r27	; 0x04
     7da:	20 e0       	ldi	r18, 0x00	; 0
     7dc:	30 e0       	ldi	r19, 0x00	; 0
     7de:	4a e7       	ldi	r20, 0x7A	; 122
     7e0:	55 e4       	ldi	r21, 0x45	; 69
     7e2:	69 81       	ldd	r22, Y+1	; 0x01
     7e4:	7a 81       	ldd	r23, Y+2	; 0x02
     7e6:	8b 81       	ldd	r24, Y+3	; 0x03
     7e8:	9c 81       	ldd	r25, Y+4	; 0x04
     7ea:	15 d2       	rcall	.+1066   	; 0xc16 <__mulsf3>
     7ec:	dc 01       	movw	r26, r24
     7ee:	cb 01       	movw	r24, r22
     7f0:	8d 83       	std	Y+5, r24	; 0x05
     7f2:	9e 83       	std	Y+6, r25	; 0x06
     7f4:	af 83       	std	Y+7, r26	; 0x07

     7f6:	b8 87       	std	Y+8, r27	; 0x08
     7f8:	20 e0       	ldi	r18, 0x00	; 0
     7fa:	30 e0       	ldi	r19, 0x00	; 0
     7fc:	40 e8       	ldi	r20, 0x80	; 128
     7fe:	5f e3       	ldi	r21, 0x3F	; 63
     800:	6d 81       	ldd	r22, Y+5	; 0x05
     802:	7e 81       	ldd	r23, Y+6	; 0x06
     804:	8f 81       	ldd	r24, Y+7	; 0x07
     806:	98 85       	ldd	r25, Y+8	; 0x08
     808:	b3 d0       	rcall	.+358    	; 0x970 <__cmpsf2>
     80a:	88 23       	and	r24, r24
int main(void) {
     80c:	2c f4       	brge	.+10     	; 0x818 <main+0x140>
     80e:	81 e0       	ldi	r24, 0x01	; 1
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	9a 87       	std	Y+10, r25	; 0x0a

     814:	89 87       	std	Y+9, r24	; 0x09
     816:	3b c0       	rjmp	.+118    	; 0x88e <main+0x1b6>
     818:	20 e0       	ldi	r18, 0x00	; 0
     81a:	3f ef       	ldi	r19, 0xFF	; 255
     81c:	4f e7       	ldi	r20, 0x7F	; 127
     81e:	57 e4       	ldi	r21, 0x47	; 71
     820:	6d 81       	ldd	r22, Y+5	; 0x05
     822:	7e 81       	ldd	r23, Y+6	; 0x06
     824:	8f 81       	ldd	r24, Y+7	; 0x07
     826:	98 85       	ldd	r25, Y+8	; 0x08
     828:	f2 d1       	rcall	.+996    	; 0xc0e <__gesf2>
	//Iniciar USART0
	USART0Init();
	//Iniciar PWM no pino 10
     82a:	18 16       	cp	r1, r24
     82c:	3c f5       	brge	.+78     	; 0x87c <main+0x1a4>
     82e:	20 e0       	ldi	r18, 0x00	; 0
     830:	30 e0       	ldi	r19, 0x00	; 0
     832:	40 e2       	ldi	r20, 0x20	; 32
     834:	51 e4       	ldi	r21, 0x41	; 65
     836:	69 81       	ldd	r22, Y+1	; 0x01
     838:	7a 81       	ldd	r23, Y+2	; 0x02
     83a:	8b 81       	ldd	r24, Y+3	; 0x03
     83c:	9c 81       	ldd	r25, Y+4	; 0x04
     83e:	eb d1       	rcall	.+982    	; 0xc16 <__mulsf3>
     840:	dc 01       	movw	r26, r24
     842:	cb 01       	movw	r24, r22
     844:	bc 01       	movw	r22, r24
     846:	cd 01       	movw	r24, r26
     848:	04 d1       	rcall	.+520    	; 0xa52 <__fixunssfsi>
     84a:	dc 01       	movw	r26, r24
     84c:	cb 01       	movw	r24, r22
     84e:	9a 87       	std	Y+10, r25	; 0x0a
     850:	89 87       	std	Y+9, r24	; 0x09
	pwm_init10();
     852:	89 85       	ldd	r24, Y+9	; 0x09
     854:	9a 85       	ldd	r25, Y+10	; 0x0a
     856:	89 2b       	or	r24, r25
     858:	09 f4       	brne	.+2      	; 0x85c <main+0x184>
     85a:	4b cf       	rjmp	.-362    	; 0x6f2 <main+0x1a>
     85c:	80 e9       	ldi	r24, 0x90	; 144
     85e:	91 e0       	ldi	r25, 0x01	; 1
     860:	9c 87       	std	Y+12, r25	; 0x0c
		USART0SendByte(s[i]);
		i++;
	}
	USART0SendByte(0x0A); //nova linha
	USART0SendByte(0x0D); //retorno do cursor
}
     862:	8b 87       	std	Y+11, r24	; 0x0b
     864:	8b 85       	ldd	r24, Y+11	; 0x0b
     866:	9c 85       	ldd	r25, Y+12	; 0x0c
     868:	01 97       	sbiw	r24, 0x01	; 1
     86a:	f1 f7       	brne	.-4      	; 0x868 <main+0x190>
     86c:	9c 87       	std	Y+12, r25	; 0x0c
	//Iniciar PWM no pino 10
	pwm_init10();
	//Iniciar ADC
	InitADC();


     86e:	8b 87       	std	Y+11, r24	; 0x0b
     870:	89 85       	ldd	r24, Y+9	; 0x09
     872:	9a 85       	ldd	r25, Y+10	; 0x0a
     874:	01 97       	sbiw	r24, 0x01	; 1
     876:	9a 87       	std	Y+10, r25	; 0x0a
     878:	89 87       	std	Y+9, r24	; 0x09
	while (1) {
		//Le pino A0
		valorPino = ReadADC(analogInPin);

		//Valor em volts do valor lido em A0
     87a:	eb cf       	rjmp	.-42     	; 0x852 <main+0x17a>
     87c:	6d 81       	ldd	r22, Y+5	; 0x05
     87e:	7e 81       	ldd	r23, Y+6	; 0x06
     880:	8f 81       	ldd	r24, Y+7	; 0x07
     882:	98 85       	ldd	r25, Y+8	; 0x08
     884:	e6 d0       	rcall	.+460    	; 0xa52 <__fixunssfsi>
     886:	dc 01       	movw	r26, r24
     888:	cb 01       	movw	r24, r22
     88a:	9a 87       	std	Y+10, r25	; 0x0a
     88c:	89 87       	std	Y+9, r24	; 0x09
     88e:	89 85       	ldd	r24, Y+9	; 0x09
     890:	9a 85       	ldd	r25, Y+10	; 0x0a
     892:	9e 87       	std	Y+14, r25	; 0x0e
     894:	8d 87       	std	Y+13, r24	; 0x0d
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     896:	8d 85       	ldd	r24, Y+13	; 0x0d
     898:	9e 85       	ldd	r25, Y+14	; 0x0e
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	f1 f7       	brne	.-4      	; 0x89a <main+0x1c2>
     89e:	9e 87       	std	Y+14, r25	; 0x0e
     8a0:	8d 87       	std	Y+13, r24	; 0x0d
	pwm_init10();
	//Iniciar ADC
	InitADC();


	while (1) {
     8a2:	27 cf       	rjmp	.-434    	; 0x6f2 <main+0x1a>

000008a4 <__mulsi3>:
     8a4:	db 01       	movw	r26, r22
     8a6:	8f 93       	push	r24
     8a8:	9f 93       	push	r25
     8aa:	27 d0       	rcall	.+78     	; 0x8fa <__muluhisi3>
     8ac:	bf 91       	pop	r27
     8ae:	af 91       	pop	r26
     8b0:	a2 9f       	mul	r26, r18
     8b2:	80 0d       	add	r24, r0
     8b4:	91 1d       	adc	r25, r1
     8b6:	a3 9f       	mul	r26, r19
     8b8:	90 0d       	add	r25, r0
     8ba:	b2 9f       	mul	r27, r18
     8bc:	90 0d       	add	r25, r0
     8be:	11 24       	eor	r1, r1
     8c0:	08 95       	ret

000008c2 <__divmodsi4>:
     8c2:	05 2e       	mov	r0, r21
     8c4:	97 fb       	bst	r25, 7
     8c6:	16 f4       	brtc	.+4      	; 0x8cc <__divmodsi4+0xa>
     8c8:	00 94       	com	r0
     8ca:	0f d0       	rcall	.+30     	; 0x8ea <__negsi2>
     8cc:	57 fd       	sbrc	r21, 7
     8ce:	05 d0       	rcall	.+10     	; 0x8da <__divmodsi4_neg2>
     8d0:	1e d0       	rcall	.+60     	; 0x90e <__udivmodsi4>
     8d2:	07 fc       	sbrc	r0, 7
     8d4:	02 d0       	rcall	.+4      	; 0x8da <__divmodsi4_neg2>
     8d6:	46 f4       	brtc	.+16     	; 0x8e8 <__divmodsi4_exit>
     8d8:	08 c0       	rjmp	.+16     	; 0x8ea <__negsi2>

000008da <__divmodsi4_neg2>:
     8da:	50 95       	com	r21
     8dc:	40 95       	com	r20
     8de:	30 95       	com	r19
     8e0:	21 95       	neg	r18
     8e2:	3f 4f       	sbci	r19, 0xFF	; 255
     8e4:	4f 4f       	sbci	r20, 0xFF	; 255
     8e6:	5f 4f       	sbci	r21, 0xFF	; 255

000008e8 <__divmodsi4_exit>:
     8e8:	08 95       	ret

000008ea <__negsi2>:
     8ea:	90 95       	com	r25
     8ec:	80 95       	com	r24
     8ee:	70 95       	com	r23
     8f0:	61 95       	neg	r22
     8f2:	7f 4f       	sbci	r23, 0xFF	; 255
     8f4:	8f 4f       	sbci	r24, 0xFF	; 255
     8f6:	9f 4f       	sbci	r25, 0xFF	; 255
     8f8:	08 95       	ret

000008fa <__muluhisi3>:
     8fa:	2b d0       	rcall	.+86     	; 0x952 <__umulhisi3>
     8fc:	a5 9f       	mul	r26, r21
     8fe:	90 0d       	add	r25, r0
     900:	b4 9f       	mul	r27, r20
     902:	90 0d       	add	r25, r0
     904:	a4 9f       	mul	r26, r20
     906:	80 0d       	add	r24, r0
     908:	91 1d       	adc	r25, r1
     90a:	11 24       	eor	r1, r1
     90c:	08 95       	ret

0000090e <__udivmodsi4>:
     90e:	a1 e2       	ldi	r26, 0x21	; 33
     910:	1a 2e       	mov	r1, r26
     912:	aa 1b       	sub	r26, r26
     914:	bb 1b       	sub	r27, r27
     916:	fd 01       	movw	r30, r26
     918:	0d c0       	rjmp	.+26     	; 0x934 <__udivmodsi4_ep>

0000091a <__udivmodsi4_loop>:
     91a:	aa 1f       	adc	r26, r26
     91c:	bb 1f       	adc	r27, r27
     91e:	ee 1f       	adc	r30, r30
     920:	ff 1f       	adc	r31, r31
     922:	a2 17       	cp	r26, r18
     924:	b3 07       	cpc	r27, r19
     926:	e4 07       	cpc	r30, r20
     928:	f5 07       	cpc	r31, r21
     92a:	20 f0       	brcs	.+8      	; 0x934 <__udivmodsi4_ep>
     92c:	a2 1b       	sub	r26, r18
     92e:	b3 0b       	sbc	r27, r19
     930:	e4 0b       	sbc	r30, r20
     932:	f5 0b       	sbc	r31, r21

00000934 <__udivmodsi4_ep>:
     934:	66 1f       	adc	r22, r22
     936:	77 1f       	adc	r23, r23
     938:	88 1f       	adc	r24, r24
     93a:	99 1f       	adc	r25, r25
     93c:	1a 94       	dec	r1
     93e:	69 f7       	brne	.-38     	; 0x91a <__udivmodsi4_loop>
     940:	60 95       	com	r22
     942:	70 95       	com	r23
     944:	80 95       	com	r24
     946:	90 95       	com	r25
     948:	9b 01       	movw	r18, r22
     94a:	ac 01       	movw	r20, r24
     94c:	bd 01       	movw	r22, r26
     94e:	cf 01       	movw	r24, r30
     950:	08 95       	ret

00000952 <__umulhisi3>:
     952:	a2 9f       	mul	r26, r18
     954:	b0 01       	movw	r22, r0
     956:	b3 9f       	mul	r27, r19
     958:	c0 01       	movw	r24, r0
     95a:	a3 9f       	mul	r26, r19
     95c:	70 0d       	add	r23, r0
     95e:	81 1d       	adc	r24, r1
     960:	11 24       	eor	r1, r1
     962:	91 1d       	adc	r25, r1
     964:	b2 9f       	mul	r27, r18
     966:	70 0d       	add	r23, r0
     968:	81 1d       	adc	r24, r1
     96a:	11 24       	eor	r1, r1
     96c:	91 1d       	adc	r25, r1
     96e:	08 95       	ret

00000970 <__cmpsf2>:
     970:	d9 d0       	rcall	.+434    	; 0xb24 <__fp_cmp>
     972:	08 f4       	brcc	.+2      	; 0x976 <__cmpsf2+0x6>
     974:	81 e0       	ldi	r24, 0x01	; 1
     976:	08 95       	ret

00000978 <__divsf3>:
     978:	0c d0       	rcall	.+24     	; 0x992 <__divsf3x>
     97a:	0f c1       	rjmp	.+542    	; 0xb9a <__fp_round>
     97c:	07 d1       	rcall	.+526    	; 0xb8c <__fp_pscB>
     97e:	40 f0       	brcs	.+16     	; 0x990 <__divsf3+0x18>
     980:	fe d0       	rcall	.+508    	; 0xb7e <__fp_pscA>
     982:	30 f0       	brcs	.+12     	; 0x990 <__divsf3+0x18>
     984:	21 f4       	brne	.+8      	; 0x98e <__divsf3+0x16>
     986:	5f 3f       	cpi	r21, 0xFF	; 255
     988:	19 f0       	breq	.+6      	; 0x990 <__divsf3+0x18>
     98a:	f0 c0       	rjmp	.+480    	; 0xb6c <__fp_inf>
     98c:	51 11       	cpse	r21, r1
     98e:	39 c1       	rjmp	.+626    	; 0xc02 <__fp_szero>
     990:	f3 c0       	rjmp	.+486    	; 0xb78 <__fp_nan>

00000992 <__divsf3x>:
     992:	14 d1       	rcall	.+552    	; 0xbbc <__fp_split3>
     994:	98 f3       	brcs	.-26     	; 0x97c <__divsf3+0x4>

00000996 <__divsf3_pse>:
     996:	99 23       	and	r25, r25
     998:	c9 f3       	breq	.-14     	; 0x98c <__divsf3+0x14>
     99a:	55 23       	and	r21, r21
     99c:	b1 f3       	breq	.-20     	; 0x98a <__divsf3+0x12>
     99e:	95 1b       	sub	r25, r21
     9a0:	55 0b       	sbc	r21, r21
     9a2:	bb 27       	eor	r27, r27
     9a4:	aa 27       	eor	r26, r26
     9a6:	62 17       	cp	r22, r18
     9a8:	73 07       	cpc	r23, r19
     9aa:	84 07       	cpc	r24, r20
     9ac:	38 f0       	brcs	.+14     	; 0x9bc <__divsf3_pse+0x26>
     9ae:	9f 5f       	subi	r25, 0xFF	; 255
     9b0:	5f 4f       	sbci	r21, 0xFF	; 255
     9b2:	22 0f       	add	r18, r18
     9b4:	33 1f       	adc	r19, r19
     9b6:	44 1f       	adc	r20, r20
     9b8:	aa 1f       	adc	r26, r26
     9ba:	a9 f3       	breq	.-22     	; 0x9a6 <__divsf3_pse+0x10>
     9bc:	33 d0       	rcall	.+102    	; 0xa24 <__divsf3_pse+0x8e>
     9be:	0e 2e       	mov	r0, r30
     9c0:	3a f0       	brmi	.+14     	; 0x9d0 <__divsf3_pse+0x3a>
     9c2:	e0 e8       	ldi	r30, 0x80	; 128
     9c4:	30 d0       	rcall	.+96     	; 0xa26 <__divsf3_pse+0x90>
     9c6:	91 50       	subi	r25, 0x01	; 1
     9c8:	50 40       	sbci	r21, 0x00	; 0
     9ca:	e6 95       	lsr	r30
     9cc:	00 1c       	adc	r0, r0
     9ce:	ca f7       	brpl	.-14     	; 0x9c2 <__divsf3_pse+0x2c>
     9d0:	29 d0       	rcall	.+82     	; 0xa24 <__divsf3_pse+0x8e>
     9d2:	fe 2f       	mov	r31, r30
     9d4:	27 d0       	rcall	.+78     	; 0xa24 <__divsf3_pse+0x8e>
     9d6:	66 0f       	add	r22, r22
     9d8:	77 1f       	adc	r23, r23
     9da:	88 1f       	adc	r24, r24
     9dc:	bb 1f       	adc	r27, r27
     9de:	26 17       	cp	r18, r22
     9e0:	37 07       	cpc	r19, r23
     9e2:	48 07       	cpc	r20, r24
     9e4:	ab 07       	cpc	r26, r27
     9e6:	b0 e8       	ldi	r27, 0x80	; 128
     9e8:	09 f0       	breq	.+2      	; 0x9ec <__divsf3_pse+0x56>
     9ea:	bb 0b       	sbc	r27, r27
     9ec:	80 2d       	mov	r24, r0
     9ee:	bf 01       	movw	r22, r30
     9f0:	ff 27       	eor	r31, r31
     9f2:	93 58       	subi	r25, 0x83	; 131
     9f4:	5f 4f       	sbci	r21, 0xFF	; 255
     9f6:	2a f0       	brmi	.+10     	; 0xa02 <__divsf3_pse+0x6c>
     9f8:	9e 3f       	cpi	r25, 0xFE	; 254
     9fa:	51 05       	cpc	r21, r1
     9fc:	68 f0       	brcs	.+26     	; 0xa18 <__divsf3_pse+0x82>
     9fe:	b6 c0       	rjmp	.+364    	; 0xb6c <__fp_inf>
     a00:	00 c1       	rjmp	.+512    	; 0xc02 <__fp_szero>
     a02:	5f 3f       	cpi	r21, 0xFF	; 255
     a04:	ec f3       	brlt	.-6      	; 0xa00 <__divsf3_pse+0x6a>
     a06:	98 3e       	cpi	r25, 0xE8	; 232
     a08:	dc f3       	brlt	.-10     	; 0xa00 <__divsf3_pse+0x6a>
     a0a:	86 95       	lsr	r24
     a0c:	77 95       	ror	r23
     a0e:	67 95       	ror	r22
     a10:	b7 95       	ror	r27
     a12:	f7 95       	ror	r31
     a14:	9f 5f       	subi	r25, 0xFF	; 255
     a16:	c9 f7       	brne	.-14     	; 0xa0a <__divsf3_pse+0x74>
     a18:	88 0f       	add	r24, r24
     a1a:	91 1d       	adc	r25, r1
     a1c:	96 95       	lsr	r25
     a1e:	87 95       	ror	r24
     a20:	97 f9       	bld	r25, 7
     a22:	08 95       	ret
     a24:	e1 e0       	ldi	r30, 0x01	; 1
     a26:	66 0f       	add	r22, r22
     a28:	77 1f       	adc	r23, r23
     a2a:	88 1f       	adc	r24, r24
     a2c:	bb 1f       	adc	r27, r27
     a2e:	62 17       	cp	r22, r18
     a30:	73 07       	cpc	r23, r19
     a32:	84 07       	cpc	r24, r20
     a34:	ba 07       	cpc	r27, r26
     a36:	20 f0       	brcs	.+8      	; 0xa40 <__divsf3_pse+0xaa>
     a38:	62 1b       	sub	r22, r18
     a3a:	73 0b       	sbc	r23, r19
     a3c:	84 0b       	sbc	r24, r20
     a3e:	ba 0b       	sbc	r27, r26
     a40:	ee 1f       	adc	r30, r30
     a42:	88 f7       	brcc	.-30     	; 0xa26 <__divsf3_pse+0x90>
     a44:	e0 95       	com	r30
     a46:	08 95       	ret

00000a48 <__fixsfsi>:
     a48:	04 d0       	rcall	.+8      	; 0xa52 <__fixunssfsi>
     a4a:	68 94       	set
     a4c:	b1 11       	cpse	r27, r1
     a4e:	d9 c0       	rjmp	.+434    	; 0xc02 <__fp_szero>
     a50:	08 95       	ret

00000a52 <__fixunssfsi>:
     a52:	bc d0       	rcall	.+376    	; 0xbcc <__fp_splitA>
     a54:	88 f0       	brcs	.+34     	; 0xa78 <__fixunssfsi+0x26>
     a56:	9f 57       	subi	r25, 0x7F	; 127
     a58:	90 f0       	brcs	.+36     	; 0xa7e <__fixunssfsi+0x2c>
     a5a:	b9 2f       	mov	r27, r25
     a5c:	99 27       	eor	r25, r25
     a5e:	b7 51       	subi	r27, 0x17	; 23
     a60:	a0 f0       	brcs	.+40     	; 0xa8a <__fixunssfsi+0x38>
     a62:	d1 f0       	breq	.+52     	; 0xa98 <__fixunssfsi+0x46>
     a64:	66 0f       	add	r22, r22
     a66:	77 1f       	adc	r23, r23
     a68:	88 1f       	adc	r24, r24
     a6a:	99 1f       	adc	r25, r25
     a6c:	1a f0       	brmi	.+6      	; 0xa74 <__fixunssfsi+0x22>
     a6e:	ba 95       	dec	r27
     a70:	c9 f7       	brne	.-14     	; 0xa64 <__fixunssfsi+0x12>
     a72:	12 c0       	rjmp	.+36     	; 0xa98 <__fixunssfsi+0x46>
     a74:	b1 30       	cpi	r27, 0x01	; 1
     a76:	81 f0       	breq	.+32     	; 0xa98 <__fixunssfsi+0x46>
     a78:	c3 d0       	rcall	.+390    	; 0xc00 <__fp_zero>
     a7a:	b1 e0       	ldi	r27, 0x01	; 1
     a7c:	08 95       	ret
     a7e:	c0 c0       	rjmp	.+384    	; 0xc00 <__fp_zero>
     a80:	67 2f       	mov	r22, r23
     a82:	78 2f       	mov	r23, r24
     a84:	88 27       	eor	r24, r24
     a86:	b8 5f       	subi	r27, 0xF8	; 248
     a88:	39 f0       	breq	.+14     	; 0xa98 <__fixunssfsi+0x46>
     a8a:	b9 3f       	cpi	r27, 0xF9	; 249
     a8c:	cc f3       	brlt	.-14     	; 0xa80 <__fixunssfsi+0x2e>
     a8e:	86 95       	lsr	r24
     a90:	77 95       	ror	r23
     a92:	67 95       	ror	r22
     a94:	b3 95       	inc	r27
     a96:	d9 f7       	brne	.-10     	; 0xa8e <__fixunssfsi+0x3c>
     a98:	3e f4       	brtc	.+14     	; 0xaa8 <__fixunssfsi+0x56>
     a9a:	90 95       	com	r25
     a9c:	80 95       	com	r24
     a9e:	70 95       	com	r23
     aa0:	61 95       	neg	r22
     aa2:	7f 4f       	sbci	r23, 0xFF	; 255
     aa4:	8f 4f       	sbci	r24, 0xFF	; 255
     aa6:	9f 4f       	sbci	r25, 0xFF	; 255
     aa8:	08 95       	ret

00000aaa <__floatunsisf>:
     aaa:	e8 94       	clt
     aac:	09 c0       	rjmp	.+18     	; 0xac0 <__floatsisf+0x12>

00000aae <__floatsisf>:
     aae:	97 fb       	bst	r25, 7
     ab0:	3e f4       	brtc	.+14     	; 0xac0 <__floatsisf+0x12>
     ab2:	90 95       	com	r25
     ab4:	80 95       	com	r24
     ab6:	70 95       	com	r23
     ab8:	61 95       	neg	r22
     aba:	7f 4f       	sbci	r23, 0xFF	; 255
     abc:	8f 4f       	sbci	r24, 0xFF	; 255
     abe:	9f 4f       	sbci	r25, 0xFF	; 255
     ac0:	99 23       	and	r25, r25
     ac2:	a9 f0       	breq	.+42     	; 0xaee <__floatsisf+0x40>
     ac4:	f9 2f       	mov	r31, r25
     ac6:	96 e9       	ldi	r25, 0x96	; 150
     ac8:	bb 27       	eor	r27, r27
     aca:	93 95       	inc	r25
     acc:	f6 95       	lsr	r31
     ace:	87 95       	ror	r24
     ad0:	77 95       	ror	r23
     ad2:	67 95       	ror	r22
     ad4:	b7 95       	ror	r27
     ad6:	f1 11       	cpse	r31, r1
     ad8:	f8 cf       	rjmp	.-16     	; 0xaca <__floatsisf+0x1c>
     ada:	fa f4       	brpl	.+62     	; 0xb1a <__floatsisf+0x6c>
     adc:	bb 0f       	add	r27, r27
     ade:	11 f4       	brne	.+4      	; 0xae4 <__floatsisf+0x36>
     ae0:	60 ff       	sbrs	r22, 0
     ae2:	1b c0       	rjmp	.+54     	; 0xb1a <__floatsisf+0x6c>
     ae4:	6f 5f       	subi	r22, 0xFF	; 255
     ae6:	7f 4f       	sbci	r23, 0xFF	; 255
     ae8:	8f 4f       	sbci	r24, 0xFF	; 255
     aea:	9f 4f       	sbci	r25, 0xFF	; 255
     aec:	16 c0       	rjmp	.+44     	; 0xb1a <__floatsisf+0x6c>
     aee:	88 23       	and	r24, r24
     af0:	11 f0       	breq	.+4      	; 0xaf6 <__floatsisf+0x48>
     af2:	96 e9       	ldi	r25, 0x96	; 150
     af4:	11 c0       	rjmp	.+34     	; 0xb18 <__floatsisf+0x6a>
     af6:	77 23       	and	r23, r23
     af8:	21 f0       	breq	.+8      	; 0xb02 <__floatsisf+0x54>
     afa:	9e e8       	ldi	r25, 0x8E	; 142
     afc:	87 2f       	mov	r24, r23
     afe:	76 2f       	mov	r23, r22
     b00:	05 c0       	rjmp	.+10     	; 0xb0c <__floatsisf+0x5e>
     b02:	66 23       	and	r22, r22
     b04:	71 f0       	breq	.+28     	; 0xb22 <__floatsisf+0x74>
     b06:	96 e8       	ldi	r25, 0x86	; 134
     b08:	86 2f       	mov	r24, r22
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	60 e0       	ldi	r22, 0x00	; 0
     b0e:	2a f0       	brmi	.+10     	; 0xb1a <__floatsisf+0x6c>
     b10:	9a 95       	dec	r25
     b12:	66 0f       	add	r22, r22
     b14:	77 1f       	adc	r23, r23
     b16:	88 1f       	adc	r24, r24
     b18:	da f7       	brpl	.-10     	; 0xb10 <__floatsisf+0x62>
     b1a:	88 0f       	add	r24, r24
     b1c:	96 95       	lsr	r25
     b1e:	87 95       	ror	r24
     b20:	97 f9       	bld	r25, 7
     b22:	08 95       	ret

00000b24 <__fp_cmp>:
     b24:	99 0f       	add	r25, r25
     b26:	00 08       	sbc	r0, r0
     b28:	55 0f       	add	r21, r21
     b2a:	aa 0b       	sbc	r26, r26
     b2c:	e0 e8       	ldi	r30, 0x80	; 128
     b2e:	fe ef       	ldi	r31, 0xFE	; 254
     b30:	16 16       	cp	r1, r22
     b32:	17 06       	cpc	r1, r23
     b34:	e8 07       	cpc	r30, r24
     b36:	f9 07       	cpc	r31, r25
     b38:	c0 f0       	brcs	.+48     	; 0xb6a <__fp_cmp+0x46>
     b3a:	12 16       	cp	r1, r18
     b3c:	13 06       	cpc	r1, r19
     b3e:	e4 07       	cpc	r30, r20
     b40:	f5 07       	cpc	r31, r21
     b42:	98 f0       	brcs	.+38     	; 0xb6a <__fp_cmp+0x46>
     b44:	62 1b       	sub	r22, r18
     b46:	73 0b       	sbc	r23, r19
     b48:	84 0b       	sbc	r24, r20
     b4a:	95 0b       	sbc	r25, r21
     b4c:	39 f4       	brne	.+14     	; 0xb5c <__fp_cmp+0x38>
     b4e:	0a 26       	eor	r0, r26
     b50:	61 f0       	breq	.+24     	; 0xb6a <__fp_cmp+0x46>
     b52:	23 2b       	or	r18, r19
     b54:	24 2b       	or	r18, r20
     b56:	25 2b       	or	r18, r21
     b58:	21 f4       	brne	.+8      	; 0xb62 <__fp_cmp+0x3e>
     b5a:	08 95       	ret
     b5c:	0a 26       	eor	r0, r26
     b5e:	09 f4       	brne	.+2      	; 0xb62 <__fp_cmp+0x3e>
     b60:	a1 40       	sbci	r26, 0x01	; 1
     b62:	a6 95       	lsr	r26
     b64:	8f ef       	ldi	r24, 0xFF	; 255
     b66:	81 1d       	adc	r24, r1
     b68:	81 1d       	adc	r24, r1
     b6a:	08 95       	ret

00000b6c <__fp_inf>:
     b6c:	97 f9       	bld	r25, 7
     b6e:	9f 67       	ori	r25, 0x7F	; 127
     b70:	80 e8       	ldi	r24, 0x80	; 128
     b72:	70 e0       	ldi	r23, 0x00	; 0
     b74:	60 e0       	ldi	r22, 0x00	; 0
     b76:	08 95       	ret

00000b78 <__fp_nan>:
     b78:	9f ef       	ldi	r25, 0xFF	; 255
     b7a:	80 ec       	ldi	r24, 0xC0	; 192
     b7c:	08 95       	ret

00000b7e <__fp_pscA>:
     b7e:	00 24       	eor	r0, r0
     b80:	0a 94       	dec	r0
     b82:	16 16       	cp	r1, r22
     b84:	17 06       	cpc	r1, r23
     b86:	18 06       	cpc	r1, r24
     b88:	09 06       	cpc	r0, r25
     b8a:	08 95       	ret

00000b8c <__fp_pscB>:
     b8c:	00 24       	eor	r0, r0
     b8e:	0a 94       	dec	r0
     b90:	12 16       	cp	r1, r18
     b92:	13 06       	cpc	r1, r19
     b94:	14 06       	cpc	r1, r20
     b96:	05 06       	cpc	r0, r21
     b98:	08 95       	ret

00000b9a <__fp_round>:
     b9a:	09 2e       	mov	r0, r25
     b9c:	03 94       	inc	r0
     b9e:	00 0c       	add	r0, r0
     ba0:	11 f4       	brne	.+4      	; 0xba6 <__fp_round+0xc>
     ba2:	88 23       	and	r24, r24
     ba4:	52 f0       	brmi	.+20     	; 0xbba <__fp_round+0x20>
     ba6:	bb 0f       	add	r27, r27
     ba8:	40 f4       	brcc	.+16     	; 0xbba <__fp_round+0x20>
     baa:	bf 2b       	or	r27, r31
     bac:	11 f4       	brne	.+4      	; 0xbb2 <__fp_round+0x18>
     bae:	60 ff       	sbrs	r22, 0
     bb0:	04 c0       	rjmp	.+8      	; 0xbba <__fp_round+0x20>
     bb2:	6f 5f       	subi	r22, 0xFF	; 255
     bb4:	7f 4f       	sbci	r23, 0xFF	; 255
     bb6:	8f 4f       	sbci	r24, 0xFF	; 255
     bb8:	9f 4f       	sbci	r25, 0xFF	; 255
     bba:	08 95       	ret

00000bbc <__fp_split3>:
     bbc:	57 fd       	sbrc	r21, 7
     bbe:	90 58       	subi	r25, 0x80	; 128
     bc0:	44 0f       	add	r20, r20
     bc2:	55 1f       	adc	r21, r21
     bc4:	59 f0       	breq	.+22     	; 0xbdc <__fp_splitA+0x10>
     bc6:	5f 3f       	cpi	r21, 0xFF	; 255
     bc8:	71 f0       	breq	.+28     	; 0xbe6 <__fp_splitA+0x1a>
     bca:	47 95       	ror	r20

00000bcc <__fp_splitA>:
     bcc:	88 0f       	add	r24, r24
     bce:	97 fb       	bst	r25, 7
     bd0:	99 1f       	adc	r25, r25
     bd2:	61 f0       	breq	.+24     	; 0xbec <__fp_splitA+0x20>
     bd4:	9f 3f       	cpi	r25, 0xFF	; 255
     bd6:	79 f0       	breq	.+30     	; 0xbf6 <__fp_splitA+0x2a>
     bd8:	87 95       	ror	r24
     bda:	08 95       	ret
     bdc:	12 16       	cp	r1, r18
     bde:	13 06       	cpc	r1, r19
     be0:	14 06       	cpc	r1, r20
     be2:	55 1f       	adc	r21, r21
     be4:	f2 cf       	rjmp	.-28     	; 0xbca <__fp_split3+0xe>
     be6:	46 95       	lsr	r20
     be8:	f1 df       	rcall	.-30     	; 0xbcc <__fp_splitA>
     bea:	08 c0       	rjmp	.+16     	; 0xbfc <__fp_splitA+0x30>
     bec:	16 16       	cp	r1, r22
     bee:	17 06       	cpc	r1, r23
     bf0:	18 06       	cpc	r1, r24
     bf2:	99 1f       	adc	r25, r25
     bf4:	f1 cf       	rjmp	.-30     	; 0xbd8 <__fp_splitA+0xc>
     bf6:	86 95       	lsr	r24
     bf8:	71 05       	cpc	r23, r1
     bfa:	61 05       	cpc	r22, r1
     bfc:	08 94       	sec
     bfe:	08 95       	ret

00000c00 <__fp_zero>:
     c00:	e8 94       	clt

00000c02 <__fp_szero>:
     c02:	bb 27       	eor	r27, r27
     c04:	66 27       	eor	r22, r22
     c06:	77 27       	eor	r23, r23
     c08:	cb 01       	movw	r24, r22
     c0a:	97 f9       	bld	r25, 7
     c0c:	08 95       	ret

00000c0e <__gesf2>:
     c0e:	8a df       	rcall	.-236    	; 0xb24 <__fp_cmp>
     c10:	08 f4       	brcc	.+2      	; 0xc14 <__gesf2+0x6>
     c12:	8f ef       	ldi	r24, 0xFF	; 255
     c14:	08 95       	ret

00000c16 <__mulsf3>:
     c16:	0b d0       	rcall	.+22     	; 0xc2e <__mulsf3x>
     c18:	c0 cf       	rjmp	.-128    	; 0xb9a <__fp_round>
     c1a:	b1 df       	rcall	.-158    	; 0xb7e <__fp_pscA>
     c1c:	28 f0       	brcs	.+10     	; 0xc28 <__mulsf3+0x12>
     c1e:	b6 df       	rcall	.-148    	; 0xb8c <__fp_pscB>
     c20:	18 f0       	brcs	.+6      	; 0xc28 <__mulsf3+0x12>
     c22:	95 23       	and	r25, r21
     c24:	09 f0       	breq	.+2      	; 0xc28 <__mulsf3+0x12>
     c26:	a2 cf       	rjmp	.-188    	; 0xb6c <__fp_inf>
     c28:	a7 cf       	rjmp	.-178    	; 0xb78 <__fp_nan>
     c2a:	11 24       	eor	r1, r1
     c2c:	ea cf       	rjmp	.-44     	; 0xc02 <__fp_szero>

00000c2e <__mulsf3x>:
     c2e:	c6 df       	rcall	.-116    	; 0xbbc <__fp_split3>
     c30:	a0 f3       	brcs	.-24     	; 0xc1a <__mulsf3+0x4>

00000c32 <__mulsf3_pse>:
     c32:	95 9f       	mul	r25, r21
     c34:	d1 f3       	breq	.-12     	; 0xc2a <__mulsf3+0x14>
     c36:	95 0f       	add	r25, r21
     c38:	50 e0       	ldi	r21, 0x00	; 0
     c3a:	55 1f       	adc	r21, r21
     c3c:	62 9f       	mul	r22, r18
     c3e:	f0 01       	movw	r30, r0
     c40:	72 9f       	mul	r23, r18
     c42:	bb 27       	eor	r27, r27
     c44:	f0 0d       	add	r31, r0
     c46:	b1 1d       	adc	r27, r1
     c48:	63 9f       	mul	r22, r19
     c4a:	aa 27       	eor	r26, r26
     c4c:	f0 0d       	add	r31, r0
     c4e:	b1 1d       	adc	r27, r1
     c50:	aa 1f       	adc	r26, r26
     c52:	64 9f       	mul	r22, r20
     c54:	66 27       	eor	r22, r22
     c56:	b0 0d       	add	r27, r0
     c58:	a1 1d       	adc	r26, r1
     c5a:	66 1f       	adc	r22, r22
     c5c:	82 9f       	mul	r24, r18
     c5e:	22 27       	eor	r18, r18
     c60:	b0 0d       	add	r27, r0
     c62:	a1 1d       	adc	r26, r1
     c64:	62 1f       	adc	r22, r18
     c66:	73 9f       	mul	r23, r19
     c68:	b0 0d       	add	r27, r0
     c6a:	a1 1d       	adc	r26, r1
     c6c:	62 1f       	adc	r22, r18
     c6e:	83 9f       	mul	r24, r19
     c70:	a0 0d       	add	r26, r0
     c72:	61 1d       	adc	r22, r1
     c74:	22 1f       	adc	r18, r18
     c76:	74 9f       	mul	r23, r20
     c78:	33 27       	eor	r19, r19
     c7a:	a0 0d       	add	r26, r0
     c7c:	61 1d       	adc	r22, r1
     c7e:	23 1f       	adc	r18, r19
     c80:	84 9f       	mul	r24, r20
     c82:	60 0d       	add	r22, r0
     c84:	21 1d       	adc	r18, r1
     c86:	82 2f       	mov	r24, r18
     c88:	76 2f       	mov	r23, r22
     c8a:	6a 2f       	mov	r22, r26
     c8c:	11 24       	eor	r1, r1
     c8e:	9f 57       	subi	r25, 0x7F	; 127
     c90:	50 40       	sbci	r21, 0x00	; 0
     c92:	8a f0       	brmi	.+34     	; 0xcb6 <__mulsf3_pse+0x84>
     c94:	e1 f0       	breq	.+56     	; 0xcce <__mulsf3_pse+0x9c>
     c96:	88 23       	and	r24, r24
     c98:	4a f0       	brmi	.+18     	; 0xcac <__mulsf3_pse+0x7a>
     c9a:	ee 0f       	add	r30, r30
     c9c:	ff 1f       	adc	r31, r31
     c9e:	bb 1f       	adc	r27, r27
     ca0:	66 1f       	adc	r22, r22
     ca2:	77 1f       	adc	r23, r23
     ca4:	88 1f       	adc	r24, r24
     ca6:	91 50       	subi	r25, 0x01	; 1
     ca8:	50 40       	sbci	r21, 0x00	; 0
     caa:	a9 f7       	brne	.-22     	; 0xc96 <__mulsf3_pse+0x64>
     cac:	9e 3f       	cpi	r25, 0xFE	; 254
     cae:	51 05       	cpc	r21, r1
     cb0:	70 f0       	brcs	.+28     	; 0xcce <__mulsf3_pse+0x9c>
     cb2:	5c cf       	rjmp	.-328    	; 0xb6c <__fp_inf>
     cb4:	a6 cf       	rjmp	.-180    	; 0xc02 <__fp_szero>
     cb6:	5f 3f       	cpi	r21, 0xFF	; 255
     cb8:	ec f3       	brlt	.-6      	; 0xcb4 <__mulsf3_pse+0x82>
     cba:	98 3e       	cpi	r25, 0xE8	; 232
     cbc:	dc f3       	brlt	.-10     	; 0xcb4 <__mulsf3_pse+0x82>
     cbe:	86 95       	lsr	r24
     cc0:	77 95       	ror	r23
     cc2:	67 95       	ror	r22
     cc4:	b7 95       	ror	r27
     cc6:	f7 95       	ror	r31
     cc8:	e7 95       	ror	r30
     cca:	9f 5f       	subi	r25, 0xFF	; 255
     ccc:	c1 f7       	brne	.-16     	; 0xcbe <__mulsf3_pse+0x8c>
     cce:	fe 2b       	or	r31, r30
     cd0:	88 0f       	add	r24, r24
     cd2:	91 1d       	adc	r25, r1
     cd4:	96 95       	lsr	r25
     cd6:	87 95       	ror	r24
     cd8:	97 f9       	bld	r25, 7
     cda:	08 95       	ret
     cdc:	11 f4       	brne	.+4      	; 0xce2 <__mulsf3_pse+0xb0>
     cde:	0e f4       	brtc	.+2      	; 0xce2 <__mulsf3_pse+0xb0>
     ce0:	4b cf       	rjmp	.-362    	; 0xb78 <__fp_nan>
     ce2:	3e c0       	rjmp	.+124    	; 0xd60 <__fp_mpack>

00000ce4 <sqrt>:
     ce4:	73 df       	rcall	.-282    	; 0xbcc <__fp_splitA>
     ce6:	d0 f3       	brcs	.-12     	; 0xcdc <__mulsf3_pse+0xaa>
     ce8:	99 23       	and	r25, r25
     cea:	d9 f3       	breq	.-10     	; 0xce2 <__mulsf3_pse+0xb0>
     cec:	ce f3       	brts	.-14     	; 0xce0 <__mulsf3_pse+0xae>
     cee:	9f 57       	subi	r25, 0x7F	; 127
     cf0:	55 0b       	sbc	r21, r21
     cf2:	87 ff       	sbrs	r24, 7
     cf4:	43 d0       	rcall	.+134    	; 0xd7c <__fp_norm2>
     cf6:	00 24       	eor	r0, r0
     cf8:	a0 e6       	ldi	r26, 0x60	; 96
     cfa:	40 ea       	ldi	r20, 0xA0	; 160
     cfc:	90 01       	movw	r18, r0
     cfe:	80 58       	subi	r24, 0x80	; 128
     d00:	56 95       	lsr	r21
     d02:	97 95       	ror	r25
     d04:	28 f4       	brcc	.+10     	; 0xd10 <sqrt+0x2c>
     d06:	80 5c       	subi	r24, 0xC0	; 192
     d08:	66 0f       	add	r22, r22
     d0a:	77 1f       	adc	r23, r23
     d0c:	88 1f       	adc	r24, r24
     d0e:	20 f0       	brcs	.+8      	; 0xd18 <sqrt+0x34>
     d10:	26 17       	cp	r18, r22
     d12:	37 07       	cpc	r19, r23
     d14:	48 07       	cpc	r20, r24
     d16:	30 f4       	brcc	.+12     	; 0xd24 <sqrt+0x40>
     d18:	62 1b       	sub	r22, r18
     d1a:	73 0b       	sbc	r23, r19
     d1c:	84 0b       	sbc	r24, r20
     d1e:	20 29       	or	r18, r0
     d20:	31 29       	or	r19, r1
     d22:	4a 2b       	or	r20, r26
     d24:	a6 95       	lsr	r26
     d26:	17 94       	ror	r1
     d28:	07 94       	ror	r0
     d2a:	20 25       	eor	r18, r0
     d2c:	31 25       	eor	r19, r1
     d2e:	4a 27       	eor	r20, r26
     d30:	58 f7       	brcc	.-42     	; 0xd08 <sqrt+0x24>
     d32:	66 0f       	add	r22, r22
     d34:	77 1f       	adc	r23, r23
     d36:	88 1f       	adc	r24, r24
     d38:	20 f0       	brcs	.+8      	; 0xd42 <sqrt+0x5e>
     d3a:	26 17       	cp	r18, r22
     d3c:	37 07       	cpc	r19, r23
     d3e:	48 07       	cpc	r20, r24
     d40:	30 f4       	brcc	.+12     	; 0xd4e <sqrt+0x6a>
     d42:	62 0b       	sbc	r22, r18
     d44:	73 0b       	sbc	r23, r19
     d46:	84 0b       	sbc	r24, r20
     d48:	20 0d       	add	r18, r0
     d4a:	31 1d       	adc	r19, r1
     d4c:	41 1d       	adc	r20, r1
     d4e:	a0 95       	com	r26
     d50:	81 f7       	brne	.-32     	; 0xd32 <sqrt+0x4e>
     d52:	b9 01       	movw	r22, r18
     d54:	84 2f       	mov	r24, r20
     d56:	91 58       	subi	r25, 0x81	; 129
     d58:	88 0f       	add	r24, r24
     d5a:	96 95       	lsr	r25
     d5c:	87 95       	ror	r24
     d5e:	08 95       	ret

00000d60 <__fp_mpack>:
     d60:	9f 3f       	cpi	r25, 0xFF	; 255
     d62:	31 f0       	breq	.+12     	; 0xd70 <__fp_mpack_finite+0xc>

00000d64 <__fp_mpack_finite>:
     d64:	91 50       	subi	r25, 0x01	; 1
     d66:	20 f4       	brcc	.+8      	; 0xd70 <__fp_mpack_finite+0xc>
     d68:	87 95       	ror	r24
     d6a:	77 95       	ror	r23
     d6c:	67 95       	ror	r22
     d6e:	b7 95       	ror	r27
     d70:	88 0f       	add	r24, r24
     d72:	91 1d       	adc	r25, r1
     d74:	96 95       	lsr	r25
     d76:	87 95       	ror	r24
     d78:	97 f9       	bld	r25, 7
     d7a:	08 95       	ret

00000d7c <__fp_norm2>:
     d7c:	91 50       	subi	r25, 0x01	; 1
     d7e:	50 40       	sbci	r21, 0x00	; 0
     d80:	66 0f       	add	r22, r22
     d82:	77 1f       	adc	r23, r23
     d84:	88 1f       	adc	r24, r24
     d86:	d2 f7       	brpl	.-12     	; 0xd7c <__fp_norm2>
     d88:	08 95       	ret

00000d8a <dtostrf>:
     d8a:	ef 92       	push	r14
     d8c:	0f 93       	push	r16
     d8e:	1f 93       	push	r17
     d90:	cf 93       	push	r28
     d92:	df 93       	push	r29
     d94:	e8 01       	movw	r28, r16
     d96:	47 fd       	sbrc	r20, 7
     d98:	02 c0       	rjmp	.+4      	; 0xd9e <dtostrf+0x14>
     d9a:	34 e0       	ldi	r19, 0x04	; 4
     d9c:	01 c0       	rjmp	.+2      	; 0xda0 <dtostrf+0x16>
     d9e:	34 e1       	ldi	r19, 0x14	; 20
     da0:	04 2e       	mov	r0, r20
     da2:	00 0c       	add	r0, r0
     da4:	55 0b       	sbc	r21, r21
     da6:	57 ff       	sbrs	r21, 7
     da8:	03 c0       	rjmp	.+6      	; 0xdb0 <dtostrf+0x26>
     daa:	51 95       	neg	r21
     dac:	41 95       	neg	r20
     dae:	51 09       	sbc	r21, r1
     db0:	e3 2e       	mov	r14, r19
     db2:	02 2f       	mov	r16, r18
     db4:	24 2f       	mov	r18, r20
     db6:	ae 01       	movw	r20, r28
     db8:	34 d0       	rcall	.+104    	; 0xe22 <dtoa_prf>
     dba:	ce 01       	movw	r24, r28
     dbc:	df 91       	pop	r29
     dbe:	cf 91       	pop	r28
     dc0:	1f 91       	pop	r17
     dc2:	0f 91       	pop	r16
     dc4:	ef 90       	pop	r14
     dc6:	08 95       	ret

00000dc8 <itoa>:
     dc8:	45 32       	cpi	r20, 0x25	; 37
     dca:	51 05       	cpc	r21, r1
     dcc:	18 f4       	brcc	.+6      	; 0xdd4 <itoa+0xc>
     dce:	42 30       	cpi	r20, 0x02	; 2
     dd0:	08 f0       	brcs	.+2      	; 0xdd4 <itoa+0xc>
     dd2:	04 c0       	rjmp	.+8      	; 0xddc <__itoa_ncheck>
     dd4:	fb 01       	movw	r30, r22
     dd6:	10 82       	st	Z, r1
     dd8:	cb 01       	movw	r24, r22
     dda:	08 95       	ret

00000ddc <__itoa_ncheck>:
     ddc:	bb 27       	eor	r27, r27
     dde:	4a 30       	cpi	r20, 0x0A	; 10
     de0:	31 f4       	brne	.+12     	; 0xdee <__itoa_ncheck+0x12>
     de2:	99 23       	and	r25, r25
     de4:	22 f4       	brpl	.+8      	; 0xdee <__itoa_ncheck+0x12>
     de6:	bd e2       	ldi	r27, 0x2D	; 45
     de8:	90 95       	com	r25
     dea:	81 95       	neg	r24
     dec:	9f 4f       	sbci	r25, 0xFF	; 255
     dee:	01 c0       	rjmp	.+2      	; 0xdf2 <__utoa_common>

00000df0 <__utoa_ncheck>:
     df0:	bb 27       	eor	r27, r27

00000df2 <__utoa_common>:
     df2:	fb 01       	movw	r30, r22
     df4:	55 27       	eor	r21, r21
     df6:	aa 27       	eor	r26, r26
     df8:	88 0f       	add	r24, r24
     dfa:	99 1f       	adc	r25, r25
     dfc:	aa 1f       	adc	r26, r26
     dfe:	a4 17       	cp	r26, r20
     e00:	10 f0       	brcs	.+4      	; 0xe06 <__utoa_common+0x14>
     e02:	a4 1b       	sub	r26, r20
     e04:	83 95       	inc	r24
     e06:	50 51       	subi	r21, 0x10	; 16
     e08:	b9 f7       	brne	.-18     	; 0xdf8 <__utoa_common+0x6>
     e0a:	a0 5d       	subi	r26, 0xD0	; 208
     e0c:	aa 33       	cpi	r26, 0x3A	; 58
     e0e:	08 f0       	brcs	.+2      	; 0xe12 <__utoa_common+0x20>
     e10:	a9 5d       	subi	r26, 0xD9	; 217
     e12:	a1 93       	st	Z+, r26
     e14:	00 97       	sbiw	r24, 0x00	; 0
     e16:	79 f7       	brne	.-34     	; 0xdf6 <__utoa_common+0x4>
     e18:	b1 11       	cpse	r27, r1
     e1a:	b1 93       	st	Z+, r27
     e1c:	11 92       	st	Z+, r1
     e1e:	cb 01       	movw	r24, r22
     e20:	4e c2       	rjmp	.+1180   	; 0x12be <strrev>

00000e22 <dtoa_prf>:
     e22:	8f 92       	push	r8
     e24:	9f 92       	push	r9
     e26:	af 92       	push	r10
     e28:	bf 92       	push	r11
     e2a:	cf 92       	push	r12
     e2c:	df 92       	push	r13
     e2e:	ef 92       	push	r14
     e30:	ff 92       	push	r15
     e32:	0f 93       	push	r16
     e34:	1f 93       	push	r17
     e36:	cf 93       	push	r28
     e38:	df 93       	push	r29
     e3a:	cd b7       	in	r28, 0x3d	; 61
     e3c:	de b7       	in	r29, 0x3e	; 62
     e3e:	29 97       	sbiw	r28, 0x09	; 9
     e40:	0f b6       	in	r0, 0x3f	; 63
     e42:	f8 94       	cli
     e44:	de bf       	out	0x3e, r29	; 62
     e46:	0f be       	out	0x3f, r0	; 63
     e48:	cd bf       	out	0x3d, r28	; 61
     e4a:	6a 01       	movw	r12, r20
     e4c:	12 2f       	mov	r17, r18
     e4e:	b0 2e       	mov	r11, r16
     e50:	2b e3       	ldi	r18, 0x3B	; 59
     e52:	20 17       	cp	r18, r16
     e54:	20 f0       	brcs	.+8      	; 0xe5e <dtoa_prf+0x3c>
     e56:	ff 24       	eor	r15, r15
     e58:	f3 94       	inc	r15
     e5a:	f0 0e       	add	r15, r16
     e5c:	02 c0       	rjmp	.+4      	; 0xe62 <dtoa_prf+0x40>
     e5e:	2c e3       	ldi	r18, 0x3C	; 60
     e60:	f2 2e       	mov	r15, r18
     e62:	0f 2d       	mov	r16, r15
     e64:	27 e0       	ldi	r18, 0x07	; 7
     e66:	ae 01       	movw	r20, r28
     e68:	4f 5f       	subi	r20, 0xFF	; 255
     e6a:	5f 4f       	sbci	r21, 0xFF	; 255
     e6c:	50 d1       	rcall	.+672    	; 0x110e <__ftoa_engine>
     e6e:	bc 01       	movw	r22, r24
     e70:	49 81       	ldd	r20, Y+1	; 0x01
     e72:	84 2f       	mov	r24, r20
     e74:	89 70       	andi	r24, 0x09	; 9
     e76:	81 30       	cpi	r24, 0x01	; 1
     e78:	31 f0       	breq	.+12     	; 0xe86 <dtoa_prf+0x64>
     e7a:	e1 fc       	sbrc	r14, 1
     e7c:	06 c0       	rjmp	.+12     	; 0xe8a <dtoa_prf+0x68>
     e7e:	e0 fe       	sbrs	r14, 0
     e80:	06 c0       	rjmp	.+12     	; 0xe8e <dtoa_prf+0x6c>
     e82:	90 e2       	ldi	r25, 0x20	; 32
     e84:	05 c0       	rjmp	.+10     	; 0xe90 <dtoa_prf+0x6e>
     e86:	9d e2       	ldi	r25, 0x2D	; 45
     e88:	03 c0       	rjmp	.+6      	; 0xe90 <dtoa_prf+0x6e>
     e8a:	9b e2       	ldi	r25, 0x2B	; 43
     e8c:	01 c0       	rjmp	.+2      	; 0xe90 <dtoa_prf+0x6e>
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	5e 2d       	mov	r21, r14
     e92:	50 71       	andi	r21, 0x10	; 16
     e94:	43 ff       	sbrs	r20, 3
     e96:	3c c0       	rjmp	.+120    	; 0xf10 <dtoa_prf+0xee>
     e98:	91 11       	cpse	r25, r1
     e9a:	02 c0       	rjmp	.+4      	; 0xea0 <dtoa_prf+0x7e>
     e9c:	83 e0       	ldi	r24, 0x03	; 3
     e9e:	01 c0       	rjmp	.+2      	; 0xea2 <dtoa_prf+0x80>
     ea0:	84 e0       	ldi	r24, 0x04	; 4
     ea2:	81 17       	cp	r24, r17
     ea4:	18 f4       	brcc	.+6      	; 0xeac <dtoa_prf+0x8a>
     ea6:	21 2f       	mov	r18, r17
     ea8:	28 1b       	sub	r18, r24
     eaa:	01 c0       	rjmp	.+2      	; 0xeae <dtoa_prf+0x8c>
     eac:	20 e0       	ldi	r18, 0x00	; 0
     eae:	51 11       	cpse	r21, r1
     eb0:	0b c0       	rjmp	.+22     	; 0xec8 <dtoa_prf+0xa6>
     eb2:	f6 01       	movw	r30, r12
     eb4:	82 2f       	mov	r24, r18
     eb6:	30 e2       	ldi	r19, 0x20	; 32
     eb8:	88 23       	and	r24, r24
     eba:	19 f0       	breq	.+6      	; 0xec2 <dtoa_prf+0xa0>
     ebc:	31 93       	st	Z+, r19
     ebe:	81 50       	subi	r24, 0x01	; 1
     ec0:	fb cf       	rjmp	.-10     	; 0xeb8 <dtoa_prf+0x96>
     ec2:	c2 0e       	add	r12, r18
     ec4:	d1 1c       	adc	r13, r1
     ec6:	20 e0       	ldi	r18, 0x00	; 0
     ec8:	99 23       	and	r25, r25
     eca:	29 f0       	breq	.+10     	; 0xed6 <dtoa_prf+0xb4>
     ecc:	d6 01       	movw	r26, r12
     ece:	9c 93       	st	X, r25
     ed0:	f6 01       	movw	r30, r12
     ed2:	31 96       	adiw	r30, 0x01	; 1
     ed4:	6f 01       	movw	r12, r30
     ed6:	c6 01       	movw	r24, r12
     ed8:	03 96       	adiw	r24, 0x03	; 3
     eda:	e2 fe       	sbrs	r14, 2
     edc:	0a c0       	rjmp	.+20     	; 0xef2 <dtoa_prf+0xd0>
     ede:	3e e4       	ldi	r19, 0x4E	; 78
     ee0:	d6 01       	movw	r26, r12
     ee2:	3c 93       	st	X, r19
     ee4:	41 e4       	ldi	r20, 0x41	; 65
     ee6:	11 96       	adiw	r26, 0x01	; 1
     ee8:	4c 93       	st	X, r20
     eea:	11 97       	sbiw	r26, 0x01	; 1
     eec:	12 96       	adiw	r26, 0x02	; 2
     eee:	3c 93       	st	X, r19
     ef0:	06 c0       	rjmp	.+12     	; 0xefe <dtoa_prf+0xdc>
     ef2:	3e e6       	ldi	r19, 0x6E	; 110
     ef4:	f6 01       	movw	r30, r12
     ef6:	30 83       	st	Z, r19
     ef8:	41 e6       	ldi	r20, 0x61	; 97
     efa:	41 83       	std	Z+1, r20	; 0x01
     efc:	32 83       	std	Z+2, r19	; 0x02
     efe:	fc 01       	movw	r30, r24
     f00:	32 2f       	mov	r19, r18
     f02:	40 e2       	ldi	r20, 0x20	; 32
     f04:	33 23       	and	r19, r19
     f06:	09 f4       	brne	.+2      	; 0xf0a <dtoa_prf+0xe8>
     f08:	42 c0       	rjmp	.+132    	; 0xf8e <dtoa_prf+0x16c>
     f0a:	41 93       	st	Z+, r20
     f0c:	31 50       	subi	r19, 0x01	; 1
     f0e:	fa cf       	rjmp	.-12     	; 0xf04 <dtoa_prf+0xe2>
     f10:	42 ff       	sbrs	r20, 2
     f12:	44 c0       	rjmp	.+136    	; 0xf9c <dtoa_prf+0x17a>
     f14:	91 11       	cpse	r25, r1
     f16:	02 c0       	rjmp	.+4      	; 0xf1c <dtoa_prf+0xfa>
     f18:	83 e0       	ldi	r24, 0x03	; 3
     f1a:	01 c0       	rjmp	.+2      	; 0xf1e <dtoa_prf+0xfc>
     f1c:	84 e0       	ldi	r24, 0x04	; 4
     f1e:	81 17       	cp	r24, r17
     f20:	18 f4       	brcc	.+6      	; 0xf28 <dtoa_prf+0x106>
     f22:	21 2f       	mov	r18, r17
     f24:	28 1b       	sub	r18, r24
     f26:	01 c0       	rjmp	.+2      	; 0xf2a <dtoa_prf+0x108>
     f28:	20 e0       	ldi	r18, 0x00	; 0
     f2a:	51 11       	cpse	r21, r1
     f2c:	0b c0       	rjmp	.+22     	; 0xf44 <dtoa_prf+0x122>
     f2e:	f6 01       	movw	r30, r12
     f30:	82 2f       	mov	r24, r18
     f32:	30 e2       	ldi	r19, 0x20	; 32
     f34:	88 23       	and	r24, r24
     f36:	19 f0       	breq	.+6      	; 0xf3e <dtoa_prf+0x11c>
     f38:	31 93       	st	Z+, r19
     f3a:	81 50       	subi	r24, 0x01	; 1
     f3c:	fb cf       	rjmp	.-10     	; 0xf34 <dtoa_prf+0x112>
     f3e:	c2 0e       	add	r12, r18
     f40:	d1 1c       	adc	r13, r1
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	99 23       	and	r25, r25
     f46:	29 f0       	breq	.+10     	; 0xf52 <dtoa_prf+0x130>
     f48:	d6 01       	movw	r26, r12
     f4a:	9c 93       	st	X, r25
     f4c:	f6 01       	movw	r30, r12
     f4e:	31 96       	adiw	r30, 0x01	; 1
     f50:	6f 01       	movw	r12, r30
     f52:	c6 01       	movw	r24, r12
     f54:	03 96       	adiw	r24, 0x03	; 3
     f56:	e2 fe       	sbrs	r14, 2
     f58:	0b c0       	rjmp	.+22     	; 0xf70 <dtoa_prf+0x14e>
     f5a:	39 e4       	ldi	r19, 0x49	; 73
     f5c:	d6 01       	movw	r26, r12
     f5e:	3c 93       	st	X, r19
     f60:	3e e4       	ldi	r19, 0x4E	; 78
     f62:	11 96       	adiw	r26, 0x01	; 1
     f64:	3c 93       	st	X, r19
     f66:	11 97       	sbiw	r26, 0x01	; 1
     f68:	36 e4       	ldi	r19, 0x46	; 70
     f6a:	12 96       	adiw	r26, 0x02	; 2
     f6c:	3c 93       	st	X, r19
     f6e:	07 c0       	rjmp	.+14     	; 0xf7e <dtoa_prf+0x15c>
     f70:	39 e6       	ldi	r19, 0x69	; 105
     f72:	f6 01       	movw	r30, r12
     f74:	30 83       	st	Z, r19
     f76:	3e e6       	ldi	r19, 0x6E	; 110
     f78:	31 83       	std	Z+1, r19	; 0x01
     f7a:	36 e6       	ldi	r19, 0x66	; 102
     f7c:	32 83       	std	Z+2, r19	; 0x02
     f7e:	fc 01       	movw	r30, r24
     f80:	32 2f       	mov	r19, r18
     f82:	40 e2       	ldi	r20, 0x20	; 32
     f84:	33 23       	and	r19, r19
     f86:	19 f0       	breq	.+6      	; 0xf8e <dtoa_prf+0x16c>
     f88:	41 93       	st	Z+, r20
     f8a:	31 50       	subi	r19, 0x01	; 1
     f8c:	fb cf       	rjmp	.-10     	; 0xf84 <dtoa_prf+0x162>
     f8e:	fc 01       	movw	r30, r24
     f90:	e2 0f       	add	r30, r18
     f92:	f1 1d       	adc	r31, r1
     f94:	10 82       	st	Z, r1
     f96:	8e ef       	ldi	r24, 0xFE	; 254
     f98:	9f ef       	ldi	r25, 0xFF	; 255
     f9a:	a6 c0       	rjmp	.+332    	; 0x10e8 <dtoa_prf+0x2c6>
     f9c:	21 e0       	ldi	r18, 0x01	; 1
     f9e:	30 e0       	ldi	r19, 0x00	; 0
     fa0:	91 11       	cpse	r25, r1
     fa2:	02 c0       	rjmp	.+4      	; 0xfa8 <dtoa_prf+0x186>
     fa4:	20 e0       	ldi	r18, 0x00	; 0
     fa6:	30 e0       	ldi	r19, 0x00	; 0
     fa8:	16 16       	cp	r1, r22
     faa:	17 06       	cpc	r1, r23
     fac:	1c f4       	brge	.+6      	; 0xfb4 <dtoa_prf+0x192>
     fae:	fb 01       	movw	r30, r22
     fb0:	31 96       	adiw	r30, 0x01	; 1
     fb2:	02 c0       	rjmp	.+4      	; 0xfb8 <dtoa_prf+0x196>
     fb4:	e1 e0       	ldi	r30, 0x01	; 1
     fb6:	f0 e0       	ldi	r31, 0x00	; 0
     fb8:	2e 0f       	add	r18, r30
     fba:	3f 1f       	adc	r19, r31
     fbc:	bb 20       	and	r11, r11
     fbe:	21 f0       	breq	.+8      	; 0xfc8 <dtoa_prf+0x1a6>
     fc0:	eb 2d       	mov	r30, r11
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	31 96       	adiw	r30, 0x01	; 1
     fc6:	02 c0       	rjmp	.+4      	; 0xfcc <dtoa_prf+0x1aa>
     fc8:	e0 e0       	ldi	r30, 0x00	; 0
     fca:	f0 e0       	ldi	r31, 0x00	; 0
     fcc:	2e 0f       	add	r18, r30
     fce:	3f 1f       	adc	r19, r31
     fd0:	e1 2f       	mov	r30, r17
     fd2:	f0 e0       	ldi	r31, 0x00	; 0
     fd4:	2e 17       	cp	r18, r30
     fd6:	3f 07       	cpc	r19, r31
     fd8:	1c f4       	brge	.+6      	; 0xfe0 <dtoa_prf+0x1be>
     fda:	12 1b       	sub	r17, r18
     fdc:	21 2f       	mov	r18, r17
     fde:	01 c0       	rjmp	.+2      	; 0xfe2 <dtoa_prf+0x1c0>
     fe0:	20 e0       	ldi	r18, 0x00	; 0
     fe2:	8e 2d       	mov	r24, r14
     fe4:	88 71       	andi	r24, 0x18	; 24
     fe6:	59 f4       	brne	.+22     	; 0xffe <dtoa_prf+0x1dc>
     fe8:	f6 01       	movw	r30, r12
     fea:	82 2f       	mov	r24, r18
     fec:	30 e2       	ldi	r19, 0x20	; 32
     fee:	88 23       	and	r24, r24
     ff0:	19 f0       	breq	.+6      	; 0xff8 <dtoa_prf+0x1d6>
     ff2:	31 93       	st	Z+, r19
     ff4:	81 50       	subi	r24, 0x01	; 1
     ff6:	fb cf       	rjmp	.-10     	; 0xfee <dtoa_prf+0x1cc>
     ff8:	c2 0e       	add	r12, r18
     ffa:	d1 1c       	adc	r13, r1
     ffc:	20 e0       	ldi	r18, 0x00	; 0
     ffe:	99 23       	and	r25, r25
    1000:	29 f0       	breq	.+10     	; 0x100c <dtoa_prf+0x1ea>
    1002:	d6 01       	movw	r26, r12
    1004:	9c 93       	st	X, r25
    1006:	f6 01       	movw	r30, r12
    1008:	31 96       	adiw	r30, 0x01	; 1
    100a:	6f 01       	movw	r12, r30
    100c:	51 11       	cpse	r21, r1
    100e:	0b c0       	rjmp	.+22     	; 0x1026 <dtoa_prf+0x204>
    1010:	f6 01       	movw	r30, r12
    1012:	82 2f       	mov	r24, r18
    1014:	90 e3       	ldi	r25, 0x30	; 48
    1016:	88 23       	and	r24, r24
    1018:	19 f0       	breq	.+6      	; 0x1020 <dtoa_prf+0x1fe>
    101a:	91 93       	st	Z+, r25
    101c:	81 50       	subi	r24, 0x01	; 1
    101e:	fb cf       	rjmp	.-10     	; 0x1016 <dtoa_prf+0x1f4>
    1020:	c2 0e       	add	r12, r18
    1022:	d1 1c       	adc	r13, r1
    1024:	20 e0       	ldi	r18, 0x00	; 0
    1026:	0f 2d       	mov	r16, r15
    1028:	06 0f       	add	r16, r22
    102a:	9a 81       	ldd	r25, Y+2	; 0x02
    102c:	34 2f       	mov	r19, r20
    102e:	30 71       	andi	r19, 0x10	; 16
    1030:	44 ff       	sbrs	r20, 4
    1032:	03 c0       	rjmp	.+6      	; 0x103a <dtoa_prf+0x218>
    1034:	91 33       	cpi	r25, 0x31	; 49
    1036:	09 f4       	brne	.+2      	; 0x103a <dtoa_prf+0x218>
    1038:	01 50       	subi	r16, 0x01	; 1
    103a:	10 16       	cp	r1, r16
    103c:	24 f4       	brge	.+8      	; 0x1046 <dtoa_prf+0x224>
    103e:	09 30       	cpi	r16, 0x09	; 9
    1040:	18 f0       	brcs	.+6      	; 0x1048 <dtoa_prf+0x226>
    1042:	08 e0       	ldi	r16, 0x08	; 8
    1044:	01 c0       	rjmp	.+2      	; 0x1048 <dtoa_prf+0x226>
    1046:	01 e0       	ldi	r16, 0x01	; 1
    1048:	ab 01       	movw	r20, r22
    104a:	77 ff       	sbrs	r23, 7
    104c:	02 c0       	rjmp	.+4      	; 0x1052 <dtoa_prf+0x230>
    104e:	40 e0       	ldi	r20, 0x00	; 0
    1050:	50 e0       	ldi	r21, 0x00	; 0
    1052:	fb 01       	movw	r30, r22
    1054:	e4 1b       	sub	r30, r20
    1056:	f5 0b       	sbc	r31, r21
    1058:	a1 e0       	ldi	r26, 0x01	; 1
    105a:	b0 e0       	ldi	r27, 0x00	; 0
    105c:	ac 0f       	add	r26, r28
    105e:	bd 1f       	adc	r27, r29
    1060:	ea 0f       	add	r30, r26
    1062:	fb 1f       	adc	r31, r27
    1064:	8e e2       	ldi	r24, 0x2E	; 46
    1066:	a8 2e       	mov	r10, r24
    1068:	4b 01       	movw	r8, r22
    106a:	80 1a       	sub	r8, r16
    106c:	91 08       	sbc	r9, r1
    106e:	0b 2d       	mov	r16, r11
    1070:	10 e0       	ldi	r17, 0x00	; 0
    1072:	11 95       	neg	r17
    1074:	01 95       	neg	r16
    1076:	11 09       	sbc	r17, r1
    1078:	4f 3f       	cpi	r20, 0xFF	; 255
    107a:	bf ef       	ldi	r27, 0xFF	; 255
    107c:	5b 07       	cpc	r21, r27
    107e:	21 f4       	brne	.+8      	; 0x1088 <dtoa_prf+0x266>
    1080:	d6 01       	movw	r26, r12
    1082:	ac 92       	st	X, r10
    1084:	11 96       	adiw	r26, 0x01	; 1
    1086:	6d 01       	movw	r12, r26
    1088:	64 17       	cp	r22, r20
    108a:	75 07       	cpc	r23, r21
    108c:	2c f0       	brlt	.+10     	; 0x1098 <dtoa_prf+0x276>
    108e:	84 16       	cp	r8, r20
    1090:	95 06       	cpc	r9, r21
    1092:	14 f4       	brge	.+4      	; 0x1098 <dtoa_prf+0x276>
    1094:	81 81       	ldd	r24, Z+1	; 0x01
    1096:	01 c0       	rjmp	.+2      	; 0x109a <dtoa_prf+0x278>
    1098:	80 e3       	ldi	r24, 0x30	; 48
    109a:	41 50       	subi	r20, 0x01	; 1
    109c:	51 09       	sbc	r21, r1
    109e:	31 96       	adiw	r30, 0x01	; 1
    10a0:	d6 01       	movw	r26, r12
    10a2:	11 96       	adiw	r26, 0x01	; 1
    10a4:	7d 01       	movw	r14, r26
    10a6:	40 17       	cp	r20, r16
    10a8:	51 07       	cpc	r21, r17
    10aa:	24 f0       	brlt	.+8      	; 0x10b4 <dtoa_prf+0x292>
    10ac:	d6 01       	movw	r26, r12
    10ae:	8c 93       	st	X, r24
    10b0:	67 01       	movw	r12, r14
    10b2:	e2 cf       	rjmp	.-60     	; 0x1078 <dtoa_prf+0x256>
    10b4:	64 17       	cp	r22, r20
    10b6:	75 07       	cpc	r23, r21
    10b8:	39 f4       	brne	.+14     	; 0x10c8 <dtoa_prf+0x2a6>
    10ba:	96 33       	cpi	r25, 0x36	; 54
    10bc:	20 f4       	brcc	.+8      	; 0x10c6 <dtoa_prf+0x2a4>
    10be:	95 33       	cpi	r25, 0x35	; 53
    10c0:	19 f4       	brne	.+6      	; 0x10c8 <dtoa_prf+0x2a6>
    10c2:	31 11       	cpse	r19, r1
    10c4:	01 c0       	rjmp	.+2      	; 0x10c8 <dtoa_prf+0x2a6>
    10c6:	81 e3       	ldi	r24, 0x31	; 49
    10c8:	f6 01       	movw	r30, r12
    10ca:	80 83       	st	Z, r24
    10cc:	f7 01       	movw	r30, r14
    10ce:	82 2f       	mov	r24, r18
    10d0:	90 e2       	ldi	r25, 0x20	; 32
    10d2:	88 23       	and	r24, r24
    10d4:	19 f0       	breq	.+6      	; 0x10dc <dtoa_prf+0x2ba>
    10d6:	91 93       	st	Z+, r25
    10d8:	81 50       	subi	r24, 0x01	; 1
    10da:	fb cf       	rjmp	.-10     	; 0x10d2 <dtoa_prf+0x2b0>
    10dc:	f7 01       	movw	r30, r14
    10de:	e2 0f       	add	r30, r18
    10e0:	f1 1d       	adc	r31, r1
    10e2:	10 82       	st	Z, r1
    10e4:	80 e0       	ldi	r24, 0x00	; 0
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	29 96       	adiw	r28, 0x09	; 9
    10ea:	0f b6       	in	r0, 0x3f	; 63
    10ec:	f8 94       	cli
    10ee:	de bf       	out	0x3e, r29	; 62
    10f0:	0f be       	out	0x3f, r0	; 63
    10f2:	cd bf       	out	0x3d, r28	; 61
    10f4:	df 91       	pop	r29
    10f6:	cf 91       	pop	r28
    10f8:	1f 91       	pop	r17
    10fa:	0f 91       	pop	r16
    10fc:	ff 90       	pop	r15
    10fe:	ef 90       	pop	r14
    1100:	df 90       	pop	r13
    1102:	cf 90       	pop	r12
    1104:	bf 90       	pop	r11
    1106:	af 90       	pop	r10
    1108:	9f 90       	pop	r9
    110a:	8f 90       	pop	r8
    110c:	08 95       	ret

0000110e <__ftoa_engine>:
    110e:	28 30       	cpi	r18, 0x08	; 8
    1110:	08 f0       	brcs	.+2      	; 0x1114 <__ftoa_engine+0x6>
    1112:	27 e0       	ldi	r18, 0x07	; 7
    1114:	33 27       	eor	r19, r19
    1116:	da 01       	movw	r26, r20
    1118:	99 0f       	add	r25, r25
    111a:	31 1d       	adc	r19, r1
    111c:	87 fd       	sbrc	r24, 7
    111e:	91 60       	ori	r25, 0x01	; 1
    1120:	00 96       	adiw	r24, 0x00	; 0
    1122:	61 05       	cpc	r22, r1
    1124:	71 05       	cpc	r23, r1
    1126:	39 f4       	brne	.+14     	; 0x1136 <__ftoa_engine+0x28>
    1128:	32 60       	ori	r19, 0x02	; 2
    112a:	2e 5f       	subi	r18, 0xFE	; 254
    112c:	3d 93       	st	X+, r19
    112e:	30 e3       	ldi	r19, 0x30	; 48
    1130:	2a 95       	dec	r18
    1132:	e1 f7       	brne	.-8      	; 0x112c <__ftoa_engine+0x1e>
    1134:	08 95       	ret
    1136:	9f 3f       	cpi	r25, 0xFF	; 255
    1138:	30 f0       	brcs	.+12     	; 0x1146 <__ftoa_engine+0x38>
    113a:	80 38       	cpi	r24, 0x80	; 128
    113c:	71 05       	cpc	r23, r1
    113e:	61 05       	cpc	r22, r1
    1140:	09 f0       	breq	.+2      	; 0x1144 <__ftoa_engine+0x36>
    1142:	3c 5f       	subi	r19, 0xFC	; 252
    1144:	3c 5f       	subi	r19, 0xFC	; 252
    1146:	3d 93       	st	X+, r19
    1148:	91 30       	cpi	r25, 0x01	; 1
    114a:	08 f0       	brcs	.+2      	; 0x114e <__ftoa_engine+0x40>
    114c:	80 68       	ori	r24, 0x80	; 128
    114e:	91 1d       	adc	r25, r1
    1150:	df 93       	push	r29
    1152:	cf 93       	push	r28
    1154:	1f 93       	push	r17
    1156:	0f 93       	push	r16
    1158:	ff 92       	push	r15
    115a:	ef 92       	push	r14
    115c:	19 2f       	mov	r17, r25
    115e:	98 7f       	andi	r25, 0xF8	; 248
    1160:	96 95       	lsr	r25
    1162:	e9 2f       	mov	r30, r25
    1164:	96 95       	lsr	r25
    1166:	96 95       	lsr	r25
    1168:	e9 0f       	add	r30, r25
    116a:	ff 27       	eor	r31, r31
    116c:	e2 5c       	subi	r30, 0xC2	; 194
    116e:	fe 4f       	sbci	r31, 0xFE	; 254
    1170:	99 27       	eor	r25, r25
    1172:	33 27       	eor	r19, r19
    1174:	ee 24       	eor	r14, r14
    1176:	ff 24       	eor	r15, r15
    1178:	a7 01       	movw	r20, r14
    117a:	e7 01       	movw	r28, r14
    117c:	05 90       	lpm	r0, Z+
    117e:	08 94       	sec
    1180:	07 94       	ror	r0
    1182:	28 f4       	brcc	.+10     	; 0x118e <__ftoa_engine+0x80>
    1184:	36 0f       	add	r19, r22
    1186:	e7 1e       	adc	r14, r23
    1188:	f8 1e       	adc	r15, r24
    118a:	49 1f       	adc	r20, r25
    118c:	51 1d       	adc	r21, r1
    118e:	66 0f       	add	r22, r22
    1190:	77 1f       	adc	r23, r23
    1192:	88 1f       	adc	r24, r24
    1194:	99 1f       	adc	r25, r25
    1196:	06 94       	lsr	r0
    1198:	a1 f7       	brne	.-24     	; 0x1182 <__ftoa_engine+0x74>
    119a:	05 90       	lpm	r0, Z+
    119c:	07 94       	ror	r0
    119e:	28 f4       	brcc	.+10     	; 0x11aa <__ftoa_engine+0x9c>
    11a0:	e7 0e       	add	r14, r23
    11a2:	f8 1e       	adc	r15, r24
    11a4:	49 1f       	adc	r20, r25
    11a6:	56 1f       	adc	r21, r22
    11a8:	c1 1d       	adc	r28, r1
    11aa:	77 0f       	add	r23, r23
    11ac:	88 1f       	adc	r24, r24
    11ae:	99 1f       	adc	r25, r25
    11b0:	66 1f       	adc	r22, r22
    11b2:	06 94       	lsr	r0
    11b4:	a1 f7       	brne	.-24     	; 0x119e <__ftoa_engine+0x90>
    11b6:	05 90       	lpm	r0, Z+
    11b8:	07 94       	ror	r0
    11ba:	28 f4       	brcc	.+10     	; 0x11c6 <__ftoa_engine+0xb8>
    11bc:	f8 0e       	add	r15, r24
    11be:	49 1f       	adc	r20, r25
    11c0:	56 1f       	adc	r21, r22
    11c2:	c7 1f       	adc	r28, r23
    11c4:	d1 1d       	adc	r29, r1
    11c6:	88 0f       	add	r24, r24
    11c8:	99 1f       	adc	r25, r25
    11ca:	66 1f       	adc	r22, r22
    11cc:	77 1f       	adc	r23, r23
    11ce:	06 94       	lsr	r0
    11d0:	a1 f7       	brne	.-24     	; 0x11ba <__ftoa_engine+0xac>
    11d2:	05 90       	lpm	r0, Z+
    11d4:	07 94       	ror	r0
    11d6:	20 f4       	brcc	.+8      	; 0x11e0 <__ftoa_engine+0xd2>
    11d8:	49 0f       	add	r20, r25
    11da:	56 1f       	adc	r21, r22
    11dc:	c7 1f       	adc	r28, r23
    11de:	d8 1f       	adc	r29, r24
    11e0:	99 0f       	add	r25, r25
    11e2:	66 1f       	adc	r22, r22
    11e4:	77 1f       	adc	r23, r23
    11e6:	88 1f       	adc	r24, r24
    11e8:	06 94       	lsr	r0
    11ea:	a9 f7       	brne	.-22     	; 0x11d6 <__ftoa_engine+0xc8>
    11ec:	84 91       	lpm	r24, Z
    11ee:	10 95       	com	r17
    11f0:	17 70       	andi	r17, 0x07	; 7
    11f2:	41 f0       	breq	.+16     	; 0x1204 <__ftoa_engine+0xf6>
    11f4:	d6 95       	lsr	r29
    11f6:	c7 95       	ror	r28
    11f8:	57 95       	ror	r21
    11fa:	47 95       	ror	r20
    11fc:	f7 94       	ror	r15
    11fe:	e7 94       	ror	r14
    1200:	1a 95       	dec	r17
    1202:	c1 f7       	brne	.-16     	; 0x11f4 <__ftoa_engine+0xe6>
    1204:	e4 ee       	ldi	r30, 0xE4	; 228
    1206:	f0 e0       	ldi	r31, 0x00	; 0
    1208:	68 94       	set
    120a:	15 90       	lpm	r1, Z+
    120c:	15 91       	lpm	r17, Z+
    120e:	35 91       	lpm	r19, Z+
    1210:	65 91       	lpm	r22, Z+
    1212:	95 91       	lpm	r25, Z+
    1214:	05 90       	lpm	r0, Z+
    1216:	7f e2       	ldi	r23, 0x2F	; 47
    1218:	73 95       	inc	r23
    121a:	e1 18       	sub	r14, r1
    121c:	f1 0a       	sbc	r15, r17
    121e:	43 0b       	sbc	r20, r19
    1220:	56 0b       	sbc	r21, r22
    1222:	c9 0b       	sbc	r28, r25
    1224:	d0 09       	sbc	r29, r0
    1226:	c0 f7       	brcc	.-16     	; 0x1218 <__ftoa_engine+0x10a>
    1228:	e1 0c       	add	r14, r1
    122a:	f1 1e       	adc	r15, r17
    122c:	43 1f       	adc	r20, r19
    122e:	56 1f       	adc	r21, r22
    1230:	c9 1f       	adc	r28, r25
    1232:	d0 1d       	adc	r29, r0
    1234:	7e f4       	brtc	.+30     	; 0x1254 <__ftoa_engine+0x146>
    1236:	70 33       	cpi	r23, 0x30	; 48
    1238:	11 f4       	brne	.+4      	; 0x123e <__ftoa_engine+0x130>
    123a:	8a 95       	dec	r24
    123c:	e6 cf       	rjmp	.-52     	; 0x120a <__ftoa_engine+0xfc>
    123e:	e8 94       	clt
    1240:	01 50       	subi	r16, 0x01	; 1
    1242:	30 f0       	brcs	.+12     	; 0x1250 <__ftoa_engine+0x142>
    1244:	08 0f       	add	r16, r24
    1246:	0a f4       	brpl	.+2      	; 0x124a <__ftoa_engine+0x13c>
    1248:	00 27       	eor	r16, r16
    124a:	02 17       	cp	r16, r18
    124c:	08 f4       	brcc	.+2      	; 0x1250 <__ftoa_engine+0x142>
    124e:	20 2f       	mov	r18, r16
    1250:	23 95       	inc	r18
    1252:	02 2f       	mov	r16, r18
    1254:	7a 33       	cpi	r23, 0x3A	; 58
    1256:	28 f0       	brcs	.+10     	; 0x1262 <__ftoa_engine+0x154>
    1258:	79 e3       	ldi	r23, 0x39	; 57
    125a:	7d 93       	st	X+, r23
    125c:	2a 95       	dec	r18
    125e:	e9 f7       	brne	.-6      	; 0x125a <__ftoa_engine+0x14c>
    1260:	10 c0       	rjmp	.+32     	; 0x1282 <__ftoa_engine+0x174>
    1262:	7d 93       	st	X+, r23
    1264:	2a 95       	dec	r18
    1266:	89 f6       	brne	.-94     	; 0x120a <__ftoa_engine+0xfc>
    1268:	06 94       	lsr	r0
    126a:	97 95       	ror	r25
    126c:	67 95       	ror	r22
    126e:	37 95       	ror	r19
    1270:	17 95       	ror	r17
    1272:	17 94       	ror	r1
    1274:	e1 18       	sub	r14, r1
    1276:	f1 0a       	sbc	r15, r17
    1278:	43 0b       	sbc	r20, r19
    127a:	56 0b       	sbc	r21, r22
    127c:	c9 0b       	sbc	r28, r25
    127e:	d0 09       	sbc	r29, r0
    1280:	98 f0       	brcs	.+38     	; 0x12a8 <__ftoa_engine+0x19a>
    1282:	23 95       	inc	r18
    1284:	7e 91       	ld	r23, -X
    1286:	73 95       	inc	r23
    1288:	7a 33       	cpi	r23, 0x3A	; 58
    128a:	08 f0       	brcs	.+2      	; 0x128e <__ftoa_engine+0x180>
    128c:	70 e3       	ldi	r23, 0x30	; 48
    128e:	7c 93       	st	X, r23
    1290:	20 13       	cpse	r18, r16
    1292:	b8 f7       	brcc	.-18     	; 0x1282 <__ftoa_engine+0x174>
    1294:	7e 91       	ld	r23, -X
    1296:	70 61       	ori	r23, 0x10	; 16
    1298:	7d 93       	st	X+, r23
    129a:	30 f0       	brcs	.+12     	; 0x12a8 <__ftoa_engine+0x19a>
    129c:	83 95       	inc	r24
    129e:	71 e3       	ldi	r23, 0x31	; 49
    12a0:	7d 93       	st	X+, r23
    12a2:	70 e3       	ldi	r23, 0x30	; 48
    12a4:	2a 95       	dec	r18
    12a6:	e1 f7       	brne	.-8      	; 0x12a0 <__ftoa_engine+0x192>
    12a8:	11 24       	eor	r1, r1
    12aa:	ef 90       	pop	r14
    12ac:	ff 90       	pop	r15
    12ae:	0f 91       	pop	r16
    12b0:	1f 91       	pop	r17
    12b2:	cf 91       	pop	r28
    12b4:	df 91       	pop	r29
    12b6:	99 27       	eor	r25, r25
    12b8:	87 fd       	sbrc	r24, 7
    12ba:	90 95       	com	r25
    12bc:	08 95       	ret

000012be <strrev>:
    12be:	dc 01       	movw	r26, r24
    12c0:	fc 01       	movw	r30, r24
    12c2:	67 2f       	mov	r22, r23
    12c4:	71 91       	ld	r23, Z+
    12c6:	77 23       	and	r23, r23
    12c8:	e1 f7       	brne	.-8      	; 0x12c2 <strrev+0x4>
    12ca:	32 97       	sbiw	r30, 0x02	; 2
    12cc:	04 c0       	rjmp	.+8      	; 0x12d6 <strrev+0x18>
    12ce:	7c 91       	ld	r23, X
    12d0:	6d 93       	st	X+, r22
    12d2:	70 83       	st	Z, r23
    12d4:	62 91       	ld	r22, -Z
    12d6:	ae 17       	cp	r26, r30
    12d8:	bf 07       	cpc	r27, r31
    12da:	c8 f3       	brcs	.-14     	; 0x12ce <strrev+0x10>
    12dc:	08 95       	ret

000012de <_exit>:
    12de:	f8 94       	cli

000012e0 <__stop_program>:
    12e0:	ff cf       	rjmp	.-2      	; 0x12e0 <__stop_program>
